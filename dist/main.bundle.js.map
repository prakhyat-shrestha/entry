{"version":3,"sources":["G:/projects/entry/src/$_lazy_route_resource lazy","G:/projects/entry/src/app/app.component.css","G:/projects/entry/src/app/app.component.html","G:/projects/entry/src/app/app.component.ts","G:/projects/entry/src/app/app.module.ts","G:/projects/entry/src/app/auth.guard.ts","G:/projects/entry/src/app/brands/brands.component.css","G:/projects/entry/src/app/brands/brands.component.html","G:/projects/entry/src/app/brands/brands.component.ts","G:/projects/entry/src/app/brands/brands.service.ts","G:/projects/entry/src/app/customers/customers.component.css","G:/projects/entry/src/app/customers/customers.component.html","G:/projects/entry/src/app/customers/customers.component.ts","G:/projects/entry/src/app/customers/customers.service.ts","G:/projects/entry/src/app/dashboard/dashboard.component.css","G:/projects/entry/src/app/dashboard/dashboard.component.html","G:/projects/entry/src/app/dashboard/dashboard.component.ts","G:/projects/entry/src/app/details/details.component.css","G:/projects/entry/src/app/details/details.component.html","G:/projects/entry/src/app/details/details.component.ts","G:/projects/entry/src/app/details/details.service.ts","G:/projects/entry/src/app/employees/employees.component.css","G:/projects/entry/src/app/employees/employees.component.html","G:/projects/entry/src/app/employees/employees.component.ts","G:/projects/entry/src/app/employees/employees.service.ts","G:/projects/entry/src/app/equipments/equipments.component.css","G:/projects/entry/src/app/equipments/equipments.component.html","G:/projects/entry/src/app/equipments/equipments.component.ts","G:/projects/entry/src/app/equipments/equipments.service.ts","G:/projects/entry/src/app/header/header.component.css","G:/projects/entry/src/app/header/header.component.html","G:/projects/entry/src/app/header/header.component.ts","G:/projects/entry/src/app/login-form/login-form.component.css","G:/projects/entry/src/app/login-form/login-form.component.html","G:/projects/entry/src/app/login-form/login-form.component.ts","G:/projects/entry/src/app/models/models.component.css","G:/projects/entry/src/app/models/models.component.html","G:/projects/entry/src/app/models/models.component.ts","G:/projects/entry/src/app/models/models.service.ts","G:/projects/entry/src/app/my-data.service.ts","G:/projects/entry/src/app/navigation/navigation.component.css","G:/projects/entry/src/app/navigation/navigation.component.html","G:/projects/entry/src/app/navigation/navigation.component.ts","G:/projects/entry/src/app/pipes.ts","G:/projects/entry/src/app/repairs/repairs.component.css","G:/projects/entry/src/app/repairs/repairs.component.html","G:/projects/entry/src/app/repairs/repairs.component.ts","G:/projects/entry/src/app/repairs/repairs.service.ts","G:/projects/entry/src/app/states/states.component.css","G:/projects/entry/src/app/states/states.component.html","G:/projects/entry/src/app/states/states.component.ts","G:/projects/entry/src/app/states/states.service.ts","G:/projects/entry/src/app/todo/todo/todo.component.css","G:/projects/entry/src/app/todo/todo/todo.component.html","G:/projects/entry/src/app/todo/todo/todo.component.ts","G:/projects/entry/src/app/user.service.ts","G:/projects/entry/src/environments/environment.ts","G:/projects/entry/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/projects/entry/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* #fullPage {\\r\\n\\tdisplay: flex;\\r\\n\\tflex-direction: column;\\r\\n\\tmin-height: 100vh;\\r\\n} */\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n/* .main{\\r\\n    width: 500px;\\r\\n    text-align: center;\\r\\n    margin: 0 auto;\\r\\n    border: 2px solid #d7d7d7;\\r\\n    border-bottom: 0px;\\r\\n    margin-top: 20px;\\r\\n    font-family: sans-serif;\\r\\n}\\r\\n\\r\\nh1{\\r\\n    text-align: center;\\r\\n    background-color: #5c8297;\\r\\n    padding: 30px 0px;\\r\\n    margin-top: 0px;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.addItem {\\r\\n    position: relative;\\r\\n    padding-bottom: 0px;\\r\\n    height: 30px;\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.addText{\\r\\n    width: 80%;\\r\\n    height: 30px;\\r\\n    padding: 5px;\\r\\n    font-size: 20px;\\r\\n}\\r\\n\\r\\n.addItem button {\\r\\n    height: 45px;\\r\\n    width: 50px;\\r\\n    padding: 5px;\\r\\n}\\r\\n\\r\\nul {\\r\\n    list-style: none;\\r\\n    font-size: 20px;\\r\\n    color: #686868;\\r\\n    margin-left: -40px;\\r\\n    margin-bottom: 0px;\\r\\n}\\r\\n\\r\\nli {\\r\\n    border-bottom: 1px solid #bfbfbf;\\r\\n    background-color: #d7d7d7;\\r\\n    padding: 10px 0px;\\r\\n    margin-bottom:5px;\\r\\n}\\r\\n\\r\\nspan {\\r\\n    cursor: pointer;\\r\\n    position: relative;\\r\\n    float: right;\\r\\n    margin-right: 5px;\\r\\n}\\r\\n */\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/projects/entry/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<!-- <div class=\\\"main\\\">\\n  <h1>Todo Items List</h1>\\n  <div class=\\\"addItem\\\">\\n    <input [(ngModel)]=\\\"newItem\\\" placeholder=\\\"Add Item\\\" class=\\\"addText\\\">\\n    <button (click)=\\\"pushItem()\\\">Add</button>\\n  </div>\\n  <ul>\\n    <li *ngFor = \\\"let i of items; let ind = index\\\">\\n      {{i.name}}\\n      <span (click)=\\\"removeItem(ind)\\\">x</span>\\n    </li>\\n  </ul>\\n\\n</div> -->\\n\\n\\n<div id=\\\"fullPage\\\">\\n  <app-header></app-header>\\n  <router-outlet></router-outlet>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/projects/entry/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { MyDataService } from './my-data.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app Works';\n  items = [];\n  newItem = \"\";\n  \n\n  constructor(private myDataService:MyDataService){}\n  \n/*   ngOnInit(){\n   this.myDataService.fetchData().subscribe(\n    (data) => this.items = data );\n    \n  }\n\n  pushItem = function(){\n    if(this.newItem != \"\"){\n      this.items.push(this.newItem);\n      this.newItem = \"\";\n    }\n  }\n\n  removeItem = function(index){\n    this.items.splice(index,1)\n  } */\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/projects/entry/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { AppComponent } from './app.component';\nimport { MyDataService } from './my-data.service';\nimport { TodoComponent } from './todo/todo/todo.component';\nimport { HeaderComponent } from './header/header.component';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { RouterModule,Routes } from '@angular/router';\nimport { AuthGuard } from './auth.guard';\nimport { UserService } from './user.service';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { CustomersComponent } from './customers/customers.component'\nimport { CustomersService } from './customers/customers.service';\nimport { RepairsComponent } from './repairs/repairs.component';\nimport { RepairsService } from './repairs/repairs.service';\nimport { StatesComponent } from './states/states.component';\nimport { StatesService } from './states/states.service';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrandsComponent } from './brands/brands.component';\nimport { BrandsService } from './brands/brands.service';\nimport { EmployeesComponent } from './employees/employees.component';\nimport { EmployeesService } from './employees/employees.service';\nimport { ModelsComponent } from './models/models.component';\nimport { ModelsService } from './models/models.service';\nimport { EquipmentsComponent } from './equipments/equipments.component';\nimport { EquipmentsService } from './equipments/equipments.service';\n\nimport {DateTimePickerModule} from 'ng-pick-datetime';\nimport { DetailsComponent } from './details/details.component';\nimport { DetailsService } from './details/details.service';\n\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport {FilterPipe} from './pipes'\n\nconst appRoutes:Routes = [\n  {\n    path: '',\n    component: LoginFormComponent\n  },\n  {\n    path: 'dashboard',\n    canActivate: [AuthGuard],\n    component: DashboardComponent,\n    \n  },\n  {\n    path: 'customers',\n    canActivate: [AuthGuard],\n    component: CustomersComponent\n  },\n  {\n    path: 'states',\n    canActivate: [AuthGuard],\n    component: StatesComponent\n  },\n  {\n    path: 'brands',\n    canActivate: [AuthGuard],\n    component: BrandsComponent\n  },\n  {\n    path: 'equipments',\n    canActivate: [AuthGuard],\n    component: EquipmentsComponent\n  },\n  {\n    path: 'employees',\n    canActivate: [AuthGuard],\n    component: EmployeesComponent\n  },\n  {\n    path: 'models',\n    canActivate: [AuthGuard],\n    component: ModelsComponent\n  }\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FilterPipe,\n    TodoComponent,\n    HeaderComponent,\n    LoginFormComponent,\n    DashboardComponent,\n    NavigationComponent,\n    CustomersComponent,\n    RepairsComponent,\n    StatesComponent,\n    BrandsComponent,\n    EmployeesComponent,\n    ModelsComponent,\n    EquipmentsComponent,\n    DetailsComponent,\n\n    \n    \n  ],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule, // required animations module\n    ToastrModule.forRoot(), // ToastrModule added\n    RouterModule.forRoot(appRoutes),\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    DateTimePickerModule,\n    NgxPaginationModule\n  ],\n  providers: [MyDataService,\n              UserService, \n              AuthGuard,\n              CustomersService,\n              RepairsService,\n              StatesService,\n              BrandsService,\n              EmployeesService,\n              ModelsService,\n              EquipmentsService,\n              DetailsService\n            ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// G:/projects/entry/src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport {UserService} from './user.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private user: UserService) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    return this.user.getUserLoggedIn();;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/projects/entry/src/app/auth.guard.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/projects/entry/src/app/brands/brands.component.css\n// module id = ../../../../../src/app/brands/brands.component.css\n// module chunks = main","module.exports = \"\\n<app-navigation></app-navigation>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-10\\\"><h2>Brands List</h2></div>\\n      <div class=\\\"col-md-2 addButton-right\\\">    \\n        <button class=\\\"btn btn-primary\\\"\\n        (click)=\\\"showAddBrandForm()\\\"\\n        data-toggle=\\\"modal\\\" \\n        data-target=\\\"#addBrandModal\\\">\\n    <i class=\\\"fa fa-plus\\\"></i>&nbsp;Brand\\n    </button></div>\\n    </div>\\n    \\n\\n    <table class=\\\"table table-bordered table-striped table-hover\\\">\\n      <thead>\\n        <tr>\\n          <th class=\\\"text-center\\\">S.N</th>\\n          <th class=\\\"text-center\\\">Brand Name</th>\\n          <th class=\\\"text-center\\\">Brand Description</th>\\n          \\n          <th class=\\\"text-center\\\">&nbsp;</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor = \\\"let brand of brands;let ind=index\\\">\\n          <td>{{ind+1}}</td>\\n          <td>{{brand.brandName}}</td>\\n          <td>{{brand.brandDescription}}</td>\\n          \\n          <td>\\n            <button class=\\\"btn btn-success\\\"\\n              (click)=\\\"showBrandDetails(brand)\\\"\\n              data-toggle=\\\"modal\\\" \\n            data-target=\\\"#addBrandModal\\\">\\n              <i class=\\\"fa fa-eye\\\"></i>\\n            </button>\\n            <button class=\\\"btn btn-info\\\"\\n                    (click)=\\\"showEditBrandForm(brand)\\\"\\n                    data-toggle=\\\"modal\\\" \\n                  data-target=\\\"#addBrandModal\\\">\\n              <i class=\\\"fa fa-edit\\\"></i>\\n            </button>\\n            <button class=\\\"btn btn-danger\\\"\\n                    (click)=\\\"removeBrand(brand._id)\\\">\\n                <i class=\\\"fa fa-minus\\\"></i>\\n              </button>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n\\n    <form *ngIf=\\\"brandForm\\\" #brandEntryForm=\\\"ngForm\\\">\\n      <div class=\\\"modal fade\\\" \\n            id=\\\"addBrandModal\\\" \\n            tabindex=\\\"-1\\\" role=\\\"dialog\\\" \\n            aria-labelledby=\\\"addBrandModal\\\" \\n            aria-hidden=\\\"true\\\"\\n            data-backdrop=\\\"static\\\" \\n            data-keyboard=\\\"false\\\">\\n        <div class=\\\"modal-dialog\\\">\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <button type=\\\"button\\\" \\n                      class=\\\"close\\\" \\n                      (click)=\\\"cancelAddEdit()\\\"\\n                      data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n              <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\" *ngIf=\\\"!showDetails\\\">Add/Edit Brand</h4>\\n              <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\" *ngIf=\\\"showDetails\\\">Brand Details</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              \\n                \\n\\n                <div class=\\\"form-group\\\" \\n                [class.has-success]=\\\"brandName.dirty && brandName.valid\\\"\\n                [class.has-error]=\\\"(brandName.touched) && !(brandName.valid)\\\">\\n\\n\\n                <label for=\\\"brandName\\\">Brand Name</label>\\n                  <input type=\\\"text\\\" \\n                          class=\\\"form-control\\\"\\n                          id=\\\"brandName\\\"\\n                          name=\\\"brandName\\\"\\n                          id=\\\"brandName\\\"\\n                          #brandName=\\\"ngModel\\\"\\n                          [(ngModel)]=\\\"newBrand.brandName\\\"\\n                          required   \\n                          >\\n                  <div *ngIf=\\\"(brandName.dirty||brandName.touched) && !(brandName.valid)\\\" class=\\\"alert alert-danger\\\">\\n                      Name is required!\\n                  </div>\\n\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"brandDesc\\\">Description</label>\\n                    <textarea\\n                          class=\\\"form-control\\\"\\n                         id=\\\"brandDesc\\\"\\n                          name=\\\"brandDesc\\\"\\n                          [(ngModel)]=\\\"newBrand.brandDescription\\\"\\n                          rows=\\\"3\\\"\\n                          ></textarea>\\n                 </div>\\n   \\n            </div>\\n            <div class=\\\"modal-footer\\\" *ngIf=\\\"!showDetails\\\" >\\n\\n                <button type=\\\"button\\\" \\n                class=\\\"btn btn-primary\\\"\\n                data-dismiss=\\\"modal\\\" \\n                (click)=\\\"saveBrand(newBrand)\\\"\\n                [disabled]=\\\"!brandEntryForm.form.valid\\\"\\n                >Save changes</button>\\n                \\n\\n              <button type=\\\"button\\\" \\n                      class=\\\"btn btn-default\\\" \\n                      data-dismiss=\\\"modal\\\"\\n                      (click)=\\\"cancelAddEdit()\\\"\\n                      >Close</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/projects/entry/src/app/brands/brands.component.html\n// module id = ../../../../../src/app/brands/brands.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Brand } from './brands';\nimport { BrandsService } from './brands.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-brands',\n  templateUrl: './brands.component.html',\n  styleUrls: ['./brands.component.css']\n})\nexport class BrandsComponent implements OnInit {\n  brands: Brand[];\n  brandForm:boolean=false;\n  isNewForm:boolean;\n  showDetails:boolean=false;\n  newBrand:any={};\n\n  constructor(private brandsService:BrandsService,\n                private toastr: ToastrService) { }\n\n  ngOnInit() {\n      this.fetchBrands();\n  }\n\n  fetchBrands(){\n    this.brandsService.fetchBrands().subscribe(\n      (data) => this.brands = data );\n  }\n\n  showBrandDetails(Brand:Brand){\n    if(!Brand){\n      this.brandForm = false;\n      return;\n    }\n    this.brandForm = true;\n    this.isNewForm=false;\n    this.newBrand = Brand;\n    this.showDetails = true;\n  }\n\n  showEditBrandForm(Brand:Brand){\n    if(!Brand){\n      this.brandForm = false;\n      return;\n    }\n    this.brandForm = true;\n    this.isNewForm=false;\n    this.newBrand = Brand;\n    this.showDetails = false;\n  }\n\n  showAddBrandForm(){\n    //resets form if edited Brand\n    console.log(this.brands.length);\n    if(this.brands.length){\n      this.newBrand = {};\n    }\n    this.brandForm = true;\n    this.isNewForm = true;\n    this.showDetails = false;\n  }\n\n  saveBrand(Brand:Brand){\n      if(this.isNewForm){\n        //add a new Brand\n        this.brandsService.addBrand(Brand).subscribe(\n          (data) => {\n            console.log(data);\n            this.fetchBrands();\n          }\n        );\n        this.showAddSuccess();\n      }\n      else{\n        //update an existing Brand\n       \n        this.brandsService.updateBrand(Brand).toPromise()\n        .then( () => {\n          this.fetchBrands();\n        }\n        );\n \n        this.showEditSuccess();\n      }\n      this.brandForm = false;\n\n  }\n\n  removeBrand(id){\n    if(confirm(\"Are you sure?\")){\n    this.brandsService.removeBrand(id).toPromise()\n    .then( () => {\n         this.fetchBrands();\n       }\n       );\n       this.showDeleteSuccess();\n      }\n  }\n\n  cancelAddEdit(){\n    this.brandForm = false;\n    this.fetchBrands();\n  }\n\n  showAddSuccess() {\n    this.toastr.success('Brand Added Successfully!!');\n  }\n  showEditSuccess() {\n    this.toastr.success('Brand Edited Successfully!!');\n  }\n  showDeleteSuccess() {\n    this.toastr.success('Brand Deleted Successfully!!');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/projects/entry/src/app/brands/brands.component.ts","\nimport { Injectable } from '@angular/core';\nimport { Brand } from './brands';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class BrandsService {\n\n  constructor(private http:Http) { }\n  \n  fetchBrands(){\n         return this.http.get('http://localhost:3000/api/brands')\n          .map(\n            (response) => response.json() )\n            ; \n      }\n\n  addBrand(brand:Brand){\n\n    return this.http.post(\"http://localhost:3000/api/brands\",brand);\n  }\n\n  removeBrand(id:string){\n   \n      const url = `${\"http://localhost:3000/api/brands\"}/${id}`;\n      return this.http.delete(url);\n    \n  }\n\n  updateBrand(brand:Brand){\n    const url = `${\"http://localhost:3000/api/brands\"}/${brand._id}`;\n    return this.http.put(url, brand);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/projects/entry/src/app/brands/brands.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/projects/entry/src/app/customers/customers.component.css\n// module id = ../../../../../src/app/customers/customers.component.css\n// module chunks = main","module.exports = \"<app-navigation></app-navigation>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-10\\\"><h2>Customers List</h2></div>\\n      <div class=\\\"col-md-2 addButton-right\\\">    \\n        <button class=\\\"btn btn-primary\\\"\\n        (click)=\\\"showAddCustomerForm()\\\"\\n        data-toggle=\\\"modal\\\" \\n        data-target=\\\"#addCustomerModal\\\">\\n    <i class=\\\"fa fa-plus\\\"></i>&nbsp;Customer\\n    </button></div>\\n    </div>\\n    \\n\\n    <table class=\\\"table table-bordered table-striped table-hover\\\">\\n      <thead>\\n        <tr>\\n          <th class=\\\"text-center\\\">S.N</th>\\n          <th class=\\\"text-center\\\">Name</th>\\n          <th class=\\\"text-center\\\">Company</th>\\n          <th class=\\\"text-center\\\">Phone</th>\\n          <th class=\\\"text-center\\\">&nbsp;</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor = \\\"let cust of customers | paginate:{ itemsPerPage: 5, currentPage: p }; let i=index\\\">\\n          <td>{{i+1}}</td>\\n          <td>{{cust.name}}</td>\\n          <td>{{cust.company}}</td>\\n          <td>{{cust.phone}}</td>\\n          <td>\\n            <button class=\\\"btn btn-success\\\"\\n              (click)=\\\"showCustomerDetails(cust)\\\"\\n              data-toggle=\\\"modal\\\" \\n            data-target=\\\"#addCustomerModal\\\">\\n              <i class=\\\"fa fa-eye\\\"></i>\\n            </button>\\n            <button class=\\\"btn btn-info\\\"\\n                    (click)=\\\"showEditCustomerForm(cust)\\\"\\n                    data-toggle=\\\"modal\\\" \\n                  data-target=\\\"#addCustomerModal\\\">\\n              <i class=\\\"fa fa-edit\\\"></i>\\n            </button>\\n            <button class=\\\"btn btn-danger\\\"\\n                    (click)=\\\"removeCustomer(cust._id)\\\">\\n                <i class=\\\"fa fa-minus\\\"></i>\\n              </button>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n    <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n\\n    <form *ngIf=\\\"customerForm\\\" #customerEntryForm=\\\"ngForm\\\">\\n      <div class=\\\"modal fade\\\" \\n            id=\\\"addCustomerModal\\\" \\n            tabindex=\\\"-1\\\" role=\\\"dialog\\\" \\n            aria-labelledby=\\\"addCustomerModal\\\" \\n            aria-hidden=\\\"true\\\"\\n            data-backdrop=\\\"static\\\" \\n            data-keyboard=\\\"false\\\">\\n        <div class=\\\"modal-dialog\\\">\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <button type=\\\"button\\\" \\n                      class=\\\"close\\\" \\n                      (click)=\\\"cancelAddEdit()\\\"\\n                      data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n              <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\" *ngIf=\\\"!showDetails\\\">Add/Edit Customer</h4>\\n              <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\" *ngIf=\\\"showDetails\\\">Customer Details</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              \\n                \\n\\n                <div class=\\\"form-group\\\" \\n                [class.has-success]=\\\"custName.dirty && custName.valid\\\"\\n                [class.has-error]=\\\"(custName.touched) && !(custName.valid)\\\">\\n\\n\\n                  <label for=\\\"custName\\\">Customer Name (required)</label>\\n                  <input type=\\\"text\\\" \\n                          class=\\\"form-control\\\" \\n                          name=\\\"custName\\\"\\n                          id=\\\"custName\\\"\\n                          #custName=\\\"ngModel\\\"\\n                          [(ngModel)]=\\\"newCustomer.name\\\"\\n                          required   \\n                          >\\n                  <div *ngIf=\\\"(custName.dirty||custName.touched) && !(custName.valid)\\\" class=\\\"alert alert-danger\\\">\\n                      Name is required!\\n                  </div>\\n\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"custCompany\\\">Company</label>\\n                  <input type=\\\"text\\\" \\n                          class=\\\"form-control\\\"\\n                          id=\\\"custCompany\\\"\\n                          name=\\\"custCompany\\\"\\n                          [(ngModel)]=\\\"newCustomer.company\\\"\\n                          >\\n                 </div>\\n                 <div class=\\\"form-group\\\">\\n                    <label for=\\\"custPhone\\\">Phone</label>\\n                    <input type=\\\"text\\\" \\n                            class=\\\"form-control\\\"\\n                            id=\\\"custPhone\\\"\\n                            name=\\\"custPhone\\\"\\n                            [(ngModel)]=\\\"newCustomer.phone\\\">\\n                   </div>\\n                   <div class=\\\"form-group\\\">\\n                      <label for=\\\"custMobile\\\">Mobile</label>\\n                      <input type=\\\"text\\\" \\n                              class=\\\"form-control\\\"\\n                              id=\\\"custMobile\\\"\\n                              name=\\\"custMobile\\\"\\n                              [(ngModel)]=\\\"newCustomer.mobile\\\">\\n                     </div>\\n                     <div class=\\\"form-group\\\">\\n                        <label for=\\\"custEmail\\\">Email</label>\\n                        <input type=\\\"text\\\" \\n                                class=\\\"form-control\\\"\\n                                id=\\\"custEmail\\\"\\n                                name=\\\"custEmail\\\"\\n                                [(ngModel)]=\\\"newCustomer.email\\\">\\n                       </div>\\n                       <div class=\\\"form-group\\\">\\n                          <label for=\\\"custAddress\\\">Address</label>\\n                          <input type=\\\"text\\\" \\n                                  class=\\\"form-control\\\"\\n                                  id=\\\"custAddress\\\"\\n                                  name=\\\"custAddress\\\"\\n                                  [(ngModel)]=\\\"newCustomer.address\\\">\\n                         </div>\\n                         <div class=\\\"form-group\\\">\\n                            <label for=\\\"custCity\\\">City</label>\\n                            <input type=\\\"text\\\" \\n                                    class=\\\"form-control\\\"\\n                                    id=\\\"custCity\\\"\\n                                    name=\\\"custCity\\\"\\n                                    [(ngModel)]=\\\"newCustomer.city\\\">\\n                           </div>\\n\\n<!--                 <button type=\\\"button\\\" \\n                        class=\\\"btn btn-primary\\\"\\n                        (click)=\\\"saveCustomer(newCustomer)\\\"\\n                        >Submit</button>\\n                <button type=\\\"button\\\" \\n                        class=\\\"btn btn-warning\\\"\\n                        (click)=\\\"cancelAddEdit()\\\">Cancel</button> -->\\n              \\n            </div>\\n            <div class=\\\"modal-footer\\\" *ngIf=\\\"!showDetails\\\" >\\n\\n                <button type=\\\"button\\\" \\n                class=\\\"btn btn-primary\\\"\\n                data-dismiss=\\\"modal\\\" \\n                (click)=\\\"saveCustomer(newCustomer)\\\"\\n                [disabled]=\\\"!customerEntryForm.form.valid\\\"\\n                >Save changes</button>\\n                <!-- [disabled]=\\\"!customerEntryForm.form.valid\\\" -->\\n\\n              <button type=\\\"button\\\" \\n                      class=\\\"btn btn-default\\\" \\n                      data-dismiss=\\\"modal\\\"\\n                      (click)=\\\"cancelAddEdit()\\\"\\n                      >Close</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/projects/entry/src/app/customers/customers.component.html\n// module id = ../../../../../src/app/customers/customers.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Customer } from './customers';\nimport { CustomersService } from './customers.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormControl, Validator, ValidationErrors } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.css']\n})\nexport class CustomersComponent implements OnInit {\n  customers: Customer[];\n  customerForm:boolean=false;\n  isNewForm:boolean;\n  showDetails:boolean=false;\n  newCustomer:any={};\n\n  constructor(private customersService:CustomersService,\n                private toastr: ToastrService) { }\n\n  ngOnInit() {\n      this.fetchCustomers();\n  }\n\n  fetchCustomers(){\n    this.customersService.fetchCustomers().subscribe(\n      (data) => {\n        this.customers = data;\n        this.customers.sort(this.sortByCustomerName);\n      } );\n  }\n\n  showCustomerDetails(customer:Customer){\n    if(!customer){\n      this.customerForm = false;\n      return;\n    }\n    this.customerForm = true;\n    this.isNewForm=false;\n    this.newCustomer = customer;\n    this.showDetails = true;\n  }\n\n  showEditCustomerForm(customer:Customer){\n    if(!customer){\n      this.customerForm = false;\n      return;\n    }\n    this.customerForm = true;\n    this.isNewForm=false;\n    this.newCustomer = customer;\n    this.showDetails = false;\n  }\n\n  showAddCustomerForm(){\n    //resets form if edited customer\n    console.log(this.customers.length);\n    if(this.customers.length){\n      this.newCustomer = {};\n    }\n    this.customerForm = true;\n    this.isNewForm = true;\n    this.showDetails = false;\n  }\n\n  saveCustomer(customer:Customer){\n      if(this.isNewForm){\n        //add a new customer\n        this.customersService.addCustomer(customer).subscribe(\n          (data) => {\n            console.log(data);\n            this.fetchCustomers();\n          }\n        );\n        this.showAddSuccess();\n      }\n      else{\n        //update an existing customer\n        this.customersService.updateCustomer(customer).toPromise()\n        .then( () => {\n          this.fetchCustomers();\n        }\n        );\n        this.showEditSuccess();\n      }\n      this.customerForm = false;\n\n  }\n\n  removeCustomer(id){\n    if(confirm(\"Are you sure?\")){\n    this.customersService.removeCustomer(id).toPromise()\n    .then( () => {\n         this.fetchCustomers();\n       }\n       );\n       this.showDeleteSuccess();\n      }\n  }\n\n  cancelAddEdit(){\n    this.customerForm = false;\n    this.fetchCustomers();\n  }\n\n  showAddSuccess() {\n    this.toastr.success('Customer Added Successfully!!');\n  }\n  showEditSuccess() {\n    this.toastr.success('Customer Edited Successfully!!');\n  }\n  showDeleteSuccess() {\n    this.toastr.success('Customer Deleted Successfully!!');\n  }\n\n  sortByCustomerName(a:Customer,b:Customer){\n    if(a.name > b.name) return 1\n      else if(a.name === b.name) return 0\n      else return -1\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/projects/entry/src/app/customers/customers.component.ts","import { Injectable } from '@angular/core';\nimport { Customer } from './customers';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class CustomersService {\n\n  constructor(private http:Http) { }\n  \n  fetchCustomers(){\n         return this.http.get('http://localhost:3000/api/customers')\n          .map(\n            (response) => response.json() )\n            ; \n      }\n\n  addCustomer(customer:Customer){\n\n    return this.http.post(\"http://localhost:3000/api/customers\",customer);\n  }\n\n  removeCustomer(id:string){\n    \n      const url = `${\"http://localhost:3000/api/customers\"}/${id}`;\n      return this.http.delete(url);\n    \n  }\n\n  updateCustomer(customer:Customer){\n    const url = `${\"http://localhost:3000/api/customers\"}/${customer._id}`;\n    return this.http.put(url,customer);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/projects/entry/src/app/customers/customers.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/projects/entry/src/app/dashboard/dashboard.component.css\n// module id = ../../../../../src/app/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<app-repairs></app-repairs>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/projects/entry/src/app/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/dashboard/dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {UserService} from '../user.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private user: UserService) { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/projects/entry/src/app/dashboard/dashboard.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/projects/entry/src/app/details/details.component.css\n// module id = ../../../../../src/app/details/details.component.css\n// module chunks = main","module.exports = \"<p>\\n  details works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/projects/entry/src/app/details/details.component.html\n// module id = ../../../../../src/app/details/details.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Detail } from './details';\nimport { DetailsService } from './details.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.css']\n})\nexport class DetailsComponent implements OnInit {\n  details: Detail[];\n  detailForm:boolean=false;\n  isNewForm:boolean;\n  showDetails:boolean=false;\n  newDetail:any={};\n\n  constructor(private detailsService:DetailsService,\n                private toastr: ToastrService) { }\n\n  ngOnInit() {\n      this.fetchDetails();\n  }\n\n  fetchDetails(){\n    this.detailsService.fetchDetails().subscribe(\n      (data) => this.details = data );\n  }\n\n  showDetailDetails(Detail:Detail){\n    if(!Detail){\n      this.detailForm = false;\n      return;\n    }\n    this.detailForm = true;\n    this.isNewForm=false;\n    this.newDetail = Detail;\n    this.showDetails = true;\n  }\n\n  showEditDetailForm(Detail:Detail){\n    if(!Detail){\n      this.detailForm = false;\n      return;\n    }\n    this.detailForm = true;\n    this.isNewForm=false;\n    this.newDetail = Detail;\n    this.showDetails = false;\n  }\n\n  showAddDetailForm(){\n    //resets form if edited Detail\n    console.log(this.details.length);\n    if(this.details.length){\n      this.newDetail = {};\n    }\n    this.detailForm = true;\n    this.isNewForm = true;\n    this.showDetails = false;\n  }\n\n  saveDetail(Detail:Detail){\n      if(this.isNewForm){\n        //add a new Detail\n        this.detailsService.addDetail(Detail).subscribe(\n          (data) => {\n            console.log(data);\n            this.fetchDetails();\n          }\n        );\n        this.showAddSuccess();\n      }\n      else{\n        //update an existing Detail\n        this.detailsService.updateDetail(Detail).toPromise()\n        .then( () => {\n          this.fetchDetails();\n        }\n        );\n \n        this.showEditSuccess();\n      }\n      this.detailForm = false;\n\n  }\n\n  removeDetail(id){\n    this.detailsService.removeDetail(id).toPromise()\n    .then( () => {\n         this.fetchDetails();\n       }\n       );\n       this.showDeleteSuccess();\n  }\n\n  cancelAddEdit(){\n    this.detailForm = false;\n    this.fetchDetails();\n  }\n\n  showAddSuccess() {\n    this.toastr.success('Detail Added Successfully!!');\n  }\n  showEditSuccess() {\n    this.toastr.success('Detail Edited Successfully!!');\n  }\n  showDeleteSuccess() {\n    this.toastr.success('Detail Deleted Successfully!!');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/projects/entry/src/app/details/details.component.ts","\nimport { Injectable } from '@angular/core';\nimport { Detail } from './details';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class DetailsService {\n\n  constructor(private http:Http) { }\n  \n  fetchDetails(){\n         return this.http.get('http://localhost:3000/api/details')\n          .map(\n            (response) => response.json() )\n            ; \n      }\n  fetchDetailsById(id:string){\n   // const url = `${\"http://localhost:3000/api/repairs\"}/${id}/${\"details\"}`;\n    const url = `${\"http://localhost:3000/api/details\"}/${id}`;\n    return this.http.get(url)\n    .map(\n      (response) => response.json() )\n      ; \n\n     // http://localhost:3000/api/repairs/5a3efa18f8e026139c014359/details\n  }\n\n  addDetail(detail:Detail){\n\n    return this.http.post(\"http://localhost:3000/api/details\",detail)\n                       .map((response) => response.json());\n  }\n\n  removeDetail(id:string){\n   \n     // const url = `${\"http://localhost:3000/api/repairs\"}/${id}/${\"details\"}`;\n      const url = `${\"http://localhost:3000/api/details\"}/${id}`;\n      return this.http.delete(url);\n    \n    \n  }\n\n  updateDetail(detail:Detail){\n   // console.log(detail.repairId);\n    //const url = `${\"http://localhost:3000/api/details/update/?where[repairId]=\"}${detail.repairId}`;\n    const url = `${\"http://localhost:3000/api/details\"}/${detail._id}`;\n    return this.http.put(url, detail);\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// G:/projects/entry/src/app/details/details.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/projects/entry/src/app/employees/employees.component.css\n// module id = ../../../../../src/app/employees/employees.component.css\n// module chunks = main","module.exports = \"\\n<app-navigation></app-navigation>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-10\\\"><h2>Employees List</h2></div>\\n      <div class=\\\"col-md-2 addButton-right\\\">    \\n        <button class=\\\"btn btn-primary\\\"\\n        (click)=\\\"showAddEmployeeForm()\\\"\\n        data-toggle=\\\"modal\\\" \\n        data-target=\\\"#addEmployeeModal\\\">\\n    <i class=\\\"fa fa-plus\\\"></i>&nbsp;Employee\\n    </button></div>\\n    </div>\\n    \\n\\n    <table class=\\\"table table-bordered table-striped table-hover\\\">\\n      <thead>\\n        <tr>\\n          <th class=\\\"text-center\\\">S.N</th>\\n          <th class=\\\"text-center\\\">Employee Name</th>\\n          <th class=\\\"text-center\\\">Employee Mobile</th>\\n          \\n          <th class=\\\"text-center\\\">&nbsp;</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor = \\\"let employee of employees;let ind=index\\\">\\n          <td>{{ind+1}}</td>\\n          <td>{{employee.employeeName}}</td>\\n          <td>{{employee.employeeMobile}}</td>\\n          \\n          <td>\\n            <button class=\\\"btn btn-success\\\"\\n              (click)=\\\"showEmployeeDetails(employee)\\\"\\n              data-toggle=\\\"modal\\\" \\n            data-target=\\\"#addEmployeeModal\\\">\\n              <i class=\\\"fa fa-eye\\\"></i>\\n            </button>\\n            <button class=\\\"btn btn-info\\\"\\n                    (click)=\\\"showEditEmployeeForm(employee)\\\"\\n                    data-toggle=\\\"modal\\\" \\n                  data-target=\\\"#addEmployeeModal\\\">\\n              <i class=\\\"fa fa-edit\\\"></i>\\n            </button>\\n            <button class=\\\"btn btn-danger\\\"\\n                    (click)=\\\"removeEmployee(employee._id)\\\">\\n                <i class=\\\"fa fa-minus\\\"></i>\\n              </button>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n\\n    <form *ngIf=\\\"employeeForm\\\" #employeeEntryForm=\\\"ngForm\\\">\\n      <div class=\\\"modal fade\\\" \\n            id=\\\"addEmployeeModal\\\" \\n            tabindex=\\\"-1\\\" role=\\\"dialog\\\" \\n            aria-labelledby=\\\"addEmployeeModal\\\" \\n            aria-hidden=\\\"true\\\"\\n            data-backdrop=\\\"static\\\" \\n            data-keyboard=\\\"false\\\">\\n        <div class=\\\"modal-dialog\\\">\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <button type=\\\"button\\\" \\n                      class=\\\"close\\\" \\n                      (click)=\\\"cancelAddEdit()\\\"\\n                      data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n              <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\" *ngIf=\\\"!showDetails\\\">Add/Edit Employee</h4>\\n              <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\" *ngIf=\\\"showDetails\\\">Employee Details</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              \\n                \\n\\n                <div class=\\\"form-group\\\" \\n                [class.has-success]=\\\"employeeName.dirty && employeeName.valid\\\"\\n                [class.has-error]=\\\"(employeeName.touched) && !(employeeName.valid)\\\">\\n\\n\\n                <label for=\\\"employeeName\\\">Employee Name</label>\\n                  <input type=\\\"text\\\" \\n                          class=\\\"form-control\\\"\\n                          id=\\\"employeeName\\\"\\n                          name=\\\"employeeName\\\"\\n                          id=\\\"employeeName\\\"\\n                          #employeeName=\\\"ngModel\\\"\\n                          [(ngModel)]=\\\"newEmployee.employeeName\\\"\\n                          required   \\n                          >\\n                  <div *ngIf=\\\"(employeeName.dirty||employeeName.touched) && !(employeeName.valid)\\\" class=\\\"alert alert-danger\\\">\\n                      Name is required!\\n                  </div>\\n\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"employeeMobile\\\">Mobile Number</label>\\n                    <input type=\\\"text\\\" \\n                          class=\\\"form-control\\\"\\n                          id=\\\"employeeMobile\\\"\\n                          name=\\\"employeeMobile\\\"\\n                          [(ngModel)]=\\\"newEmployee.employeeMobile\\\"\\n                          rows=\\\"3\\\"\\n                          >\\n                 </div>\\n   \\n            </div>\\n            <div class=\\\"modal-footer\\\" *ngIf=\\\"!showDetails\\\" >\\n\\n                <button type=\\\"button\\\" \\n                class=\\\"btn btn-primary\\\"\\n                data-dismiss=\\\"modal\\\" \\n                (click)=\\\"saveEmployee(newEmployee)\\\"\\n                [disabled]=\\\"!employeeEntryForm.form.valid\\\"\\n                >Save changes</button>\\n                \\n\\n              <button type=\\\"button\\\" \\n                      class=\\\"btn btn-default\\\" \\n                      data-dismiss=\\\"modal\\\"\\n                      (click)=\\\"cancelAddEdit()\\\"\\n                      >Close</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/projects/entry/src/app/employees/employees.component.html\n// module id = ../../../../../src/app/employees/employees.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Employee } from './employees';\nimport { EmployeesService } from './employees.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-employees',\n  templateUrl: './employees.component.html',\n  styleUrls: ['./employees.component.css']\n})\nexport class EmployeesComponent implements OnInit {\n  employees: Employee[];\n  employeeForm:boolean=false;\n  isNewForm:boolean;\n  showDetails:boolean=false;\n  newEmployee:any={};\n\n  constructor(private employeesService:EmployeesService,\n                private toastr: ToastrService) { }\n\n  ngOnInit() {\n      this.fetchEmployees();\n  }\n\n  fetchEmployees(){\n    this.employeesService.fetchEmployees().subscribe(\n      (data) => this.employees = data );\n  }\n\n  showEmployeeDetails(Employee:Employee){\n    if(!Employee){\n      this.employeeForm = false;\n      return;\n    }\n    this.employeeForm = true;\n    this.isNewForm=false;\n    this.newEmployee = Employee;\n    this.showDetails = true;\n  }\n\n  showEditEmployeeForm(Employee:Employee){\n    if(!Employee){\n      this.employeeForm = false;\n      return;\n    }\n    this.employeeForm = true;\n    this.isNewForm=false;\n    this.newEmployee = Employee;\n    this.showDetails = false;\n  }\n\n  showAddEmployeeForm(){\n    //resets form if edited Employee\n    console.log(this.employees.length);\n    if(this.employees.length){\n      this.newEmployee = {};\n    }\n    this.employeeForm = true;\n    this.isNewForm = true;\n    this.showDetails = false;\n  }\n\n  saveEmployee(Employee:Employee){\n      if(this.isNewForm){\n        //add a new Employee\n        this.employeesService.addEmployee(Employee).subscribe(\n          (data) => {\n            console.log(data);\n            this.fetchEmployees();\n          }\n        );\n        this.showAddSuccess();\n      }\n      else{\n        //update an existing Employee\n        this.employeesService.updateEmployee(Employee).toPromise()\n        .then( () => {\n          this.fetchEmployees();\n        }\n        );\n        this.showEditSuccess();\n      }\n      this.employeeForm = false;\n\n  }\n\n  removeEmployee(id){\n    if(confirm(\"Are you sure?\")){\n    this.employeesService.removeEmployee(id).toPromise()\n    .then( () => {\n         this.fetchEmployees();\n       }\n       );\n       this.showDeleteSuccess();\n      }\n  }\n\n  cancelAddEdit(){\n    this.employeeForm = false;\n    this.fetchEmployees();\n  }\n\n  showAddSuccess() {\n    this.toastr.success('Employee Added Successfully!!');\n  }\n  showEditSuccess() {\n    this.toastr.success('Employee Edited Successfully!!');\n  }\n  showDeleteSuccess() {\n    this.toastr.success('Employee Deleted Successfully!!');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/projects/entry/src/app/employees/employees.component.ts","import { Injectable } from '@angular/core';\nimport { Employee } from './employees';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class EmployeesService {\n\n  constructor(private http:Http) { }\n  \n  fetchEmployees(){\n         return this.http.get('http://localhost:3000/api/employees')\n          .map(\n            (response) => response.json() )\n            ; \n      }\n\n  addEmployee(employee:Employee){\n\n    return this.http.post(\"http://localhost:3000/api/employees\",employee);\n  }\n\n  removeEmployee(id:string){\n \n      const url = `${\"http://localhost:3000/api/employees\"}/${id}`;\n      return this.http.delete(url);\n    \n  }\n\n  updateEmployee(employee:Employee){\n    const url = `${\"http://localhost:3000/api/employees\"}/${employee._id}`;\n    return this.http.put(url,employee);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/projects/entry/src/app/employees/employees.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/projects/entry/src/app/equipments/equipments.component.css\n// module id = ../../../../../src/app/equipments/equipments.component.css\n// module chunks = main","module.exports = \"\\n<app-navigation></app-navigation>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-10\\\"><h2>Equipments List</h2></div>\\n      <div class=\\\"col-md-2 addButton-right\\\">    \\n        <button class=\\\"btn btn-primary\\\"\\n        (click)=\\\"showAddEquipmentForm()\\\"\\n        data-toggle=\\\"modal\\\" \\n        data-target=\\\"#addEquipmentModal\\\">\\n    <i class=\\\"fa fa-plus\\\"></i>&nbsp;Equipment\\n    </button></div>\\n    </div>\\n    \\n\\n    <table class=\\\"table table-bordered table-striped table-hover\\\">\\n      <thead>\\n        <tr>\\n          <th class=\\\"text-center\\\">S.N</th>\\n          <th class=\\\"text-center\\\">Equipment Name</th>\\n          <th class=\\\"text-center\\\">Equipment Description</th>\\n          \\n          <th class=\\\"text-center\\\">&nbsp;</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor = \\\"let equipment of equipments;let ind=index\\\">\\n          <td>{{ind+1}}</td>\\n          <td>{{equipment.equipmentName}}</td>\\n          <td>{{equipment.equipmentDescription}}</td>\\n          \\n          <td>\\n            <button class=\\\"btn btn-success\\\"\\n              (click)=\\\"showEquipmentDetails(equipment)\\\"\\n              data-toggle=\\\"modal\\\" \\n            data-target=\\\"#addEquipmentModal\\\">\\n              <i class=\\\"fa fa-eye\\\"></i>\\n            </button>\\n            <button class=\\\"btn btn-info\\\"\\n                    (click)=\\\"showEditEquipmentForm(equipment)\\\"\\n                    data-toggle=\\\"modal\\\" \\n                  data-target=\\\"#addEquipmentModal\\\">\\n              <i class=\\\"fa fa-edit\\\"></i>\\n            </button>\\n            <button class=\\\"btn btn-danger\\\"\\n                    (click)=\\\"removeEquipment(equipment._id)\\\">\\n                <i class=\\\"fa fa-minus\\\"></i>\\n              </button>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n\\n    <form *ngIf=\\\"equipmentForm\\\" #equipmentEntryForm=\\\"ngForm\\\">\\n      <div class=\\\"modal fade\\\" \\n            id=\\\"addEquipmentModal\\\" \\n            tabindex=\\\"-1\\\" role=\\\"dialog\\\" \\n            aria-labelledby=\\\"addEquipmentModal\\\" \\n            aria-hidden=\\\"true\\\"\\n            data-backdrop=\\\"static\\\" \\n            data-keyboard=\\\"false\\\">\\n        <div class=\\\"modal-dialog\\\">\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <button type=\\\"button\\\" \\n                      class=\\\"close\\\" \\n                      (click)=\\\"cancelAddEdit()\\\"\\n                      data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n              <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\" *ngIf=\\\"!showDetails\\\">Add/Edit Equipment</h4>\\n              <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\" *ngIf=\\\"showDetails\\\">Equipment Details</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              \\n                \\n\\n                <div class=\\\"form-group\\\" \\n                [class.has-success]=\\\"equipmentName.dirty && equipmentName.valid\\\"\\n                [class.has-error]=\\\"(equipmentName.touched) && !(equipmentName.valid)\\\">\\n\\n\\n                <label for=\\\"equipmentName\\\">Equipment Name</label>\\n                  <input type=\\\"text\\\" \\n                          class=\\\"form-control\\\"\\n                          id=\\\"equipmentName\\\"\\n                          name=\\\"equipmentName\\\"\\n                          id=\\\"equipmentName\\\"\\n                          #equipmentName=\\\"ngModel\\\"\\n                          [(ngModel)]=\\\"newEquipment.equipmentName\\\"\\n                          required   \\n                          >\\n                  <div *ngIf=\\\"(equipmentName.dirty||equipmentName.touched) && !(equipmentName.valid)\\\" class=\\\"alert alert-danger\\\">\\n                      Name is required!\\n                  </div>\\n\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"equipmentDesc\\\">Description</label>\\n                    <textarea\\n                          class=\\\"form-control\\\"\\n                         id=\\\"equipmentDesc\\\"\\n                          name=\\\"equipmentDesc\\\"\\n                          [(ngModel)]=\\\"newEquipment.equipmentDescription\\\"\\n                          rows=\\\"3\\\"\\n                          ></textarea>\\n                 </div>\\n   \\n            </div>\\n            <div class=\\\"modal-footer\\\" *ngIf=\\\"!showDetails\\\" >\\n\\n                <button type=\\\"button\\\" \\n                class=\\\"btn btn-primary\\\"\\n                data-dismiss=\\\"modal\\\" \\n                (click)=\\\"saveEquipment(newEquipment)\\\"\\n                [disabled]=\\\"!equipmentEntryForm.form.valid\\\"\\n                >Save changes</button>\\n                \\n\\n              <button type=\\\"button\\\" \\n                      class=\\\"btn btn-default\\\" \\n                      data-dismiss=\\\"modal\\\"\\n                      (click)=\\\"cancelAddEdit()\\\"\\n                      >Close</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/projects/entry/src/app/equipments/equipments.component.html\n// module id = ../../../../../src/app/equipments/equipments.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Equipment } from './equipments';\nimport { EquipmentsService } from './equipments.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-equipments',\n  templateUrl: './equipments.component.html',\n  styleUrls: ['./equipments.component.css']\n})\nexport class EquipmentsComponent implements OnInit {\n  equipments: Equipment[];\n  equipmentForm:boolean=false;\n  isNewForm:boolean;\n  showDetails:boolean=false;\n  newEquipment:any={};\n\n  constructor(private equipmentsService:EquipmentsService,\n                private toastr: ToastrService) { }\n\n  ngOnInit() {\n      this.fetchEquipments();\n  }\n\n  fetchEquipments(){\n    this.equipmentsService.fetchEquipments().subscribe(\n      (data) => this.equipments = data );\n  }\n\n  showEquipmentDetails(Equipment:Equipment){\n    if(!Equipment){\n      this.equipmentForm = false;\n      return;\n    }\n    this.equipmentForm = true;\n    this.isNewForm=false;\n    this.newEquipment = Equipment;\n    this.showDetails = true;\n  }\n\n  showEditEquipmentForm(Equipment:Equipment){\n    if(!Equipment){\n      this.equipmentForm = false;\n      return;\n    }\n    this.equipmentForm = true;\n    this.isNewForm=false;\n    this.newEquipment = Equipment;\n    this.showDetails = false;\n  }\n\n  showAddEquipmentForm(){\n    //resets form if edited Equipment\n    console.log(this.equipments.length);\n    if(this.equipments.length){\n      this.newEquipment = {};\n    }\n    this.equipmentForm = true;\n    this.isNewForm = true;\n    this.showDetails = false;\n  }\n\n  saveEquipment(Equipment:Equipment){\n      if(this.isNewForm){\n        //add a new Equipment\n        this.equipmentsService.addEquipment(Equipment).subscribe(\n          (data) => {\n            console.log(data);\n            this.fetchEquipments();\n          }\n        );\n        this.showAddSuccess();\n      }\n      else{\n        //update an existing Equipment\n        this.equipmentsService.updateEquipment(Equipment).toPromise()\n        .then( () => {\n          this.fetchEquipments();\n        }\n        );\n        this.showEditSuccess();\n      }\n      this.equipmentForm = false;\n\n  }\n\n  removeEquipment(id){\n    if(confirm(\"Are you sure?\")){\n    this.equipmentsService.removeEquipment(id).toPromise()\n    .then( () => {\n         this.fetchEquipments();\n       }\n       );\n       this.showDeleteSuccess();\n      }\n  }\n\n  cancelAddEdit(){\n    this.equipmentForm = false;\n    this.fetchEquipments();\n  }\n\n  showAddSuccess() {\n    this.toastr.success('Equipment Added Successfully!!');\n  }\n  showEditSuccess() {\n    this.toastr.success('Equipment Edited Successfully!!');\n  }\n  showDeleteSuccess() {\n    this.toastr.success('Equipment Deleted Successfully!!');\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// G:/projects/entry/src/app/equipments/equipments.component.ts","\nimport { Injectable } from '@angular/core';\nimport { Equipment } from './equipments';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class EquipmentsService {\n\n  constructor(private http:Http) { }\n  \n  fetchEquipments(){\n         return this.http.get('http://localhost:3000/api/equipments')\n          .map(\n            (response) => response.json() )\n            ; \n      }\n\n  addEquipment(equipment:Equipment){\n\n    return this.http.post(\"http://localhost:3000/api/equipments\",equipment);\n  }\n\n  removeEquipment(id:string){\n    \n      const url = `${\"http://localhost:3000/api/equipments\"}/${id}`;\n      return this.http.delete(url);\n    \n  }\n\n  updateEquipment(equipment:Equipment){\n    const url = `${\"http://localhost:3000/api/equipments\"}/${equipment._id}`;\n    return this.http.put(url,equipment);\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// G:/projects/entry/src/app/equipments/equipments.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"header {\\r\\n    text-align: center;\\r\\n    padding: 20px 0;\\r\\n    font-size: 30px;\\r\\n    border-bottom: 2px solid #eee;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/projects/entry/src/app/header/header.component.css\n// module id = ../../../../../src/app/header/header.component.css\n// module chunks = main","module.exports = \"<header>\\n  Keshtronix Camera Repair\\n</header>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/projects/entry/src/app/header/header.component.html\n// module id = ../../../../../src/app/header/header.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/projects/entry/src/app/header/header.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host {\\r\\n\\t-webkit-box-flex: 1;\\r\\n\\t    -ms-flex-positive: 1;\\r\\n\\t        flex-grow: 1;\\r\\n\\tdisplay: -webkit-box;\\r\\n\\tdisplay: -ms-flexbox;\\r\\n\\tdisplay: flex;\\r\\n\\t-webkit-box-pack: center;\\r\\n\\t    -ms-flex-pack: center;\\r\\n\\t        justify-content: center;\\r\\n\\t-webkit-box-align: center;\\r\\n\\t    -ms-flex-align: center;\\r\\n\\t        align-items: center;\\r\\n}\\r\\n\\r\\ndiv.input {\\r\\n\\tposition: relative;\\r\\n}\\r\\n\\r\\ndiv.input label {\\r\\n\\tposition: absolute;\\r\\n\\ttop: 0;\\r\\n\\t-webkit-transform: translateY(-50%);\\r\\n\\t        transform: translateY(-50%);\\r\\n\\tleft: 10px;\\r\\n\\tbackground: white;\\r\\n\\tpadding: 5px 2px;\\r\\n}\\r\\n\\r\\ndiv.input input {\\r\\n\\tpadding: 10px 20px;\\r\\n\\tfont-size: 25px;\\r\\n\\toutline: 0;\\r\\n}\\r\\n\\r\\ndiv.input {\\r\\n\\tmargin-top: 20px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/projects/entry/src/app/login-form/login-form.component.css\n// module id = ../../../../../src/app/login-form/login-form.component.css\n// module chunks = main","module.exports = \"<form (submit) = \\\"loginUser($event)\\\">\\n  <div class=\\\"input\\\">\\n    <label>Username</label>\\n    <input type=\\\"text\\\">\\n  </div>\\n  <div class=\\\"input\\\">\\n    <label>Password</label>\\n    <input type=\\\"password\\\">\\n  </div>\\n  <div class=\\\"input\\\">\\n    <input type=\\\"submit\\\" value=\\\"Login\\\">\\n  </div>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/projects/entry/src/app/login-form/login-form.component.html\n// module id = ../../../../../src/app/login-form/login-form.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {UserService} from '../user.service';\n\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.css']\n})\nexport class LoginFormComponent implements OnInit {\n\n  constructor(private router:Router,private user:UserService) { }\n\n  ngOnInit() {\n  }\n\n  loginUser(e){\n    e.preventDefault();\n\n    var username = e.target.elements[0].value;\n    var password = e.target.elements[1].value;\n    //console.log(username,password);\n  \n      if(username == 'raja' && password == 'rani'){\n        this.user.setUserLoggedIn();\n        this.router.navigate(['dashboard']);\n      }\n      else {\n        alert(\"Wrong UserName & Password Combination! Please Try Again!\")\n      }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/projects/entry/src/app/login-form/login-form.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/projects/entry/src/app/models/models.component.css\n// module id = ../../../../../src/app/models/models.component.css\n// module chunks = main","module.exports = \"\\n<app-navigation></app-navigation>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-10\\\"><h2>Models List</h2></div>\\n      <div class=\\\"col-md-2 addButton-right\\\">    \\n        <button class=\\\"btn btn-primary\\\"\\n        (click)=\\\"showAddModelForm()\\\"\\n        data-toggle=\\\"modal\\\" \\n        data-target=\\\"#addModelModal\\\">\\n    <i class=\\\"fa fa-plus\\\"></i>&nbsp;Model\\n    </button></div>\\n    </div>\\n    \\n\\n    <table class=\\\"table table-bordered table-striped table-hover\\\">\\n      <thead>\\n        <tr>\\n          <th>S.N</th>\\n          <th>Model Name</th>\\n          <th>Model Description</th>\\n          <th>Brand</th>\\n          <th>Equipment Type</th>\\n          <th>&nbsp;</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor = \\\"let model of models;let ind=index\\\">\\n          <td>{{ind+1}}</td>\\n          <td>{{model.model_Name}}</td>\\n          <td>{{model.model_Description}}</td>\\n          <td>{{model.brandId.brandName}}</td>\\n          <td>{{model.equipmentId.equipmentName}}</td>  \\n          <td>\\n            <button class=\\\"btn btn-success\\\"\\n              (click)=\\\"showModelDetails(model)\\\"\\n              data-toggle=\\\"modal\\\" \\n            data-target=\\\"#addModelModal\\\">\\n              <i class=\\\"fa fa-eye\\\"></i>\\n            </button>\\n            <button class=\\\"btn btn-info\\\"\\n                    (click)=\\\"showEditModelForm(model)\\\"\\n                    data-toggle=\\\"modal\\\" \\n                  data-target=\\\"#addModelModal\\\">\\n              <i class=\\\"fa fa-edit\\\"></i>\\n            </button>\\n            <button class=\\\"btn btn-danger\\\"\\n                    (click)=\\\"removeModel(model._id)\\\">\\n                <i class=\\\"fa fa-minus\\\"></i>\\n              </button>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n\\n    <form *ngIf=\\\"modelForm\\\" #modelEntryForm=\\\"ngForm\\\">\\n      <div class=\\\"modal fade\\\" \\n            id=\\\"addModelModal\\\" \\n            tabindex=\\\"-1\\\" role=\\\"dialog\\\" \\n            aria-labelledby=\\\"addModelModal\\\" \\n            aria-hidden=\\\"true\\\"\\n            data-backdrop=\\\"static\\\" \\n            data-keyboard=\\\"false\\\">\\n        <div class=\\\"modal-dialog\\\">\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <button type=\\\"button\\\" \\n                      class=\\\"close\\\" \\n                      (click)=\\\"cancelAddEdit()\\\"\\n                      data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n              <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\" *ngIf=\\\"!showDetails\\\">Add/Edit Model</h4>\\n              <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\" *ngIf=\\\"showDetails\\\">Model Details</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              \\n                \\n\\n                <div class=\\\"form-group\\\" \\n                [class.has-success]=\\\"model_Name.dirty && model_Name.valid\\\"\\n                [class.has-error]=\\\"(model_Name.touched) && !(model_Name.valid)\\\">\\n\\n\\n                <label for=\\\"model_Name\\\">Model Name *</label>\\n                  <input type=\\\"text\\\" \\n                          class=\\\"form-control\\\"\\n                          id=\\\"model_Name\\\"\\n                          name=\\\"model_Name\\\"\\n                          id=\\\"model_Name\\\"\\n                          #model_Name=\\\"ngModel\\\"\\n                          [(ngModel)]=\\\"newModel.model_Name\\\"\\n                          required   \\n                          >\\n                  <div *ngIf=\\\"(model_Name.dirty||model_Name.touched) && !(model_Name.valid)\\\" class=\\\"alert alert-danger\\\">\\n                      Name is required!\\n                  </div>\\n\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"modelDesc\\\">Description</label>\\n                    <textarea\\n                          class=\\\"form-control\\\"\\n                          id=\\\"modelDesc\\\"\\n                          name=\\\"modelDesc\\\"\\n                          [(ngModel)]=\\\"newModel.model_Description\\\"\\n                          rows=\\\"3\\\"\\n                          ></textarea>\\n                 </div>\\n                  <div class=\\\"form-group\\\">\\n                   <label for=\\\"modelBrand\\\">Brand</label><br>\\n                   <select  class=\\\"form-control\\\" \\n                            name=\\\"brands\\\" \\n                             [(ngModel)]=\\\"newModel.brandId\\\"\\n                            >\\n                      <option value=\\\"\\\" disabled >Choose a Brand</option>\\n                      <option *ngFor=\\\"let brand of brands\\\" value=\\\"{{brand._id}}\\\">\\n                               {{brand.brandName}}</option>\\n                    </select>\\n\\n                 </div>\\n\\n\\n                 <div class=\\\"form-group\\\">\\n                    <label for=\\\"modelBrand\\\">Equipment Type</label><br>\\n                    <select  class=\\\"form-control\\\" \\n                             name=\\\"equipments\\\" \\n                             [(ngModel)]=\\\"newModel.equipmentId\\\">\\n                       <option *ngFor=\\\"let equipment of equipments\\\" value=\\\"{{equipment._id}}\\\">{{equipment.equipmentName}}</option>\\n                     </select>\\n \\n                  </div>\\n\\n                \\n            </div>\\n            <div class=\\\"modal-footer\\\" *ngIf=\\\"!showDetails\\\" >\\n\\n                <button type=\\\"button\\\" \\n                class=\\\"btn btn-primary\\\"\\n                data-dismiss=\\\"modal\\\" \\n                (click)=\\\"saveModel(newModel)\\\"\\n                [disabled]=\\\"!modelEntryForm.form.valid\\\"\\n                >Save changes</button>\\n                \\n\\n              <button type=\\\"button\\\" \\n                      class=\\\"btn btn-default\\\" \\n                      data-dismiss=\\\"modal\\\"\\n                      (click)=\\\"cancelAddEdit()\\\"\\n                      >Close</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/projects/entry/src/app/models/models.component.html\n// module id = ../../../../../src/app/models/models.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Model } from './models';\nimport { Brand } from './../brands/brands';\nimport { Equipment } from './../equipments/equipments';\nimport { ModelsService } from './models.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { BrandsService } from './../brands/brands.service';\nimport { EquipmentsService } from './../equipments/equipments.service';\n@Component({\n  selector: 'app-models',\n  templateUrl: './models.component.html',\n  styleUrls: ['./models.component.css']\n})\nexport class ModelsComponent implements OnInit {\n  models: Model[];\n  modelForm:boolean=false;\n  isNewForm:boolean;\n  showDetails:boolean=false;\n  newModel:any={ };\n  newModelx:any={};\n  brands: Brand[];\n  equipments: Equipment[];\n  sendModel:Model;\n\n  constructor(private modelsService:ModelsService,\n              private toastr: ToastrService,\n              private brandsService:BrandsService,\n              private equipmentsService:EquipmentsService\n             \n            ) {\n\n             }\n\n  ngOnInit() {\n      this.fetchModels();\n\n      this.brandsService.fetchBrands().subscribe(\n        (data) => this.brands = data); \n\n      this.equipmentsService.fetchEquipments().subscribe(\n        (data) => this.equipments = data\n      );\n\n  }\n\n  fetchModels(){\n    this.modelsService.fetchModels().subscribe(\n      (data) => \n        this.models = data );\n  }\n\n  showModelDetails(model:Model){\n    if(!model){\n      this.modelForm = false;\n      return;\n    }\n    this.modelForm = true;\n    this.isNewForm=false;\n    this.newModel = model;\n    this.newModel.brandId = model.brandId['_id'];\n    this.newModel.equipmentId = model.equipmentId['_id'];\n    this.showDetails = true;\n  }\n\n  showEditModelForm(model:Model){\n    console.log(model);\n    if(!model){\n      this.modelForm = false;\n      return;\n    }\n    this.modelForm = true;\n    this.isNewForm=false;\n     this.newModel = model;\n    this.newModel.brandId = model.brandId['_id'];\n    this.newModel.equipmentId = model.equipmentId['_id'];\n    this.showDetails = false;\n  }\n\n  showAddModelForm(){\n    //resets form if edited Model\n    console.log(this.models.length);\n    if(this.models.length){\n      this.newModel = {};\n    }\n    this.modelForm = true;\n    this.isNewForm = true;\n    this.showDetails = false;\n  }\n\n  saveModel(model:Model){\n    console.log(model);\n    \n    this.sendModel = {\n      _id: model._id,\n      model_Name: model.model_Name,\n      model_Description:model.model_Description,\n      brandId: model.brandId,\n      equipmentId: model.equipmentId\n    }\n\n      if(this.isNewForm){\n        //add a new Model\n        this.modelsService.addModel(this.sendModel).subscribe(\n          (data) => {\n            \n            this.fetchModels();\n          }\n        );\n        this.showAddSuccess();\n      }\n      else{\n        //update an existing Model\n        \n        this.modelsService.updateModel(this.sendModel).toPromise()\n        .then( (data) => {\n          //console.log(data);\n          this.fetchModels();\n        }\n        );\n        console.log(model);\n\n        this.showEditSuccess();\n      }\n      this.modelForm = false;\n      \n\n  }\n\n  removeModel(id){\n    if(confirm(\"Are you sure?\")){\n    this.modelsService.removeModel(id).toPromise()\n    .then( () => {\n         this.fetchModels();\n       }\n       );\n       this.showDeleteSuccess();\n      }\n  }\n\n  cancelAddEdit(){\n    this.modelForm = false;\n    this.fetchModels();\n  }\n\n  showAddSuccess() {\n    this.toastr.success('Model Added Successfully!!');\n  }\n  showEditSuccess() {\n    this.toastr.success('Model Edited Successfully!!');\n  }\n  showDeleteSuccess() {\n    this.toastr.success('Model Deleted Successfully!!');\n  }\n\n  getBrandName(id){\n    for(let brand of this.brands){\n        if(brand._id == id){\n          return brand.brandName;\n        }\n    }\n    return \"Not Available.\";\n  }\n\n  getEquipmentName(id) {\n    for (let equipment of this.equipments) {\n      if (equipment._id == id) {\n        return equipment.equipmentName;\n      }\n    }\n    return \"Not Available.\";\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// G:/projects/entry/src/app/models/models.component.ts","import { Injectable } from '@angular/core';\nimport { Model } from './models';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class ModelsService {\n\n  constructor(private http:Http) { }\n  \n  fetchModels(){\n    //return this.http.get('http://localhost:3000/api/models?filter[include]=brand&filter[include]=equipment')\n    return this.http.get('http://localhost:3000/api/models')\n          .map(\n            (response) => response.json() )\n            ; \n      }\n\n      fetchModelsOnly(){\n        return this.http.get('http://localhost:3000/api/models')\n              .map(\n                (response) => response.json() )\n                ; \n          }\n\n\n  addModel(model:Model){\n\n    return this.http.post(\"http://localhost:3000/api/models\",model);\n  }\n\n  removeModel(id:string){\n   \n      const url = `${\"http://localhost:3000/api/models\"}/${id}`;\n      return this.http.delete(url);\n    \n  }\n\n  updateModel(model:Model){\n    const url = `${\"http://localhost:3000/api/models\"}/${model._id}`;\n    return this.http.put(url, model);\n  }\n\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// G:/projects/entry/src/app/models/models.service.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class MyDataService {\n\n  constructor(private http:Http) { }\n\n  fetchData(){\n/*     return this.http.get('http://localhost:3000/api/items')\n      .map(\n        (response) => response.json() )\n        ; */\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/projects/entry/src/app/my-data.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/projects/entry/src/app/navigation/navigation.component.css\n// module id = ../../../../../src/app/navigation/navigation.component.css\n// module chunks = main","module.exports = \"\\n\\n\\n<div class=\\\"container\\\">\\n\\n  <div class=\\\"row\\\">\\n\\n      <div class=\\\"col-md-12\\\">\\n          <ul class=\\\"nav nav-pills\\\">\\n              <li role=\\\"presentation\\\"><a routerLink=\\\"/dashboard\\\">Repairs</a></li>\\n              <li role=\\\"presentation\\\"><a routerLink=\\\"/customers\\\">Customers</a></li>\\n              <li role=\\\"presentation\\\" class=\\\"dropdown\\\">\\n                <a class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" href=\\\"#\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                  Manage <span class=\\\"caret\\\"></span>\\n                </a>\\n                <ul class=\\\"dropdown-menu\\\">\\n                  <li role=\\\"presentation\\\"><a routerLink=\\\"/states\\\">States</a></li>\\n                  <li role=\\\"presentation\\\"><a routerLink=\\\"/equipments\\\">Equipment Type</a></li>\\n                  <li role=\\\"presentation\\\"><a routerLink=\\\"/brands\\\">Brand</a></li>\\n                  <li role=\\\"presentation\\\"><a routerLink=\\\"/models\\\">Model</a></li>\\n                  <li role=\\\"presentation\\\"><a routerLink=\\\"/employees\\\">Employees</a></li>\\n                  \\n                </ul>\\n              </li>\\n              <li role=\\\"presentation\\\"><a routerLink=\\\"/\\\">LogOut</a></li>\\n            </ul>\\n\\n      </div>\\n      \\n    </div>\\n\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/projects/entry/src/app/navigation/navigation.component.html\n// module id = ../../../../../src/app/navigation/navigation.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/projects/entry/src/app/navigation/navigation.component.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'FilterPipe',\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n    transform(value: any, input: string) {\r\n        if (input) {\r\n            input = input.toLowerCase();\r\n            return value.filter(function (el: any) {\r\n                return el.customerId.name.toLowerCase().indexOf(input) > -1 \r\n                            ;\r\n            })\r\n        }\r\n\r\n        return value;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// G:/projects/entry/src/app/pipes.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/projects/entry/src/app/repairs/repairs.component.css\n// module id = ../../../../../src/app/repairs/repairs.component.css\n// module chunks = main","module.exports = \"\\n<app-navigation>\\n</app-navigation>\\n\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-2\\\">\\n        <h2>Repairs List</h2>\\n        \\n      </div>\\n      <div class=\\\"col-md-8 searchBox\\\"><input type=\\\"text\\\" [(ngModel)]=\\\"queryString\\\" id=\\\"search\\\" placeholder=\\\"Search Customer\\\"></div>\\n      <div class=\\\"col-md-2 addButton-right\\\">\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"showAddRepairForm()\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addRepairModal\\\">\\n          <i class=\\\"fa fa-plus\\\"></i>&nbsp;Repair\\n        </button>\\n      </div>\\n    </div>\\n\\n\\n    <table class=\\\"table table-bordered table-striped table-hover\\\">\\n      <thead>\\n        <tr>\\n          <th class=\\\"\\\">S.N</th>\\n          <th class=\\\"\\\">Bill No</th>\\n          <th class=\\\"\\\">Date Received</th>\\n          <th class=\\\"\\\">Customer</th>\\n          <th class=\\\"\\\">Company</th>\\n          <th class=\\\"\\\">Model</th>\\n          <th class=\\\"status\\\">Status</th>\\n          <th class=\\\"\\\">Assigned To</th>\\n          <th class=\\\"\\\">Staff Note</th>\\n          <th class=\\\"\\\">Problem Reported</th>\\n          <th class=\\\"\\\">&nbsp;</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let repair of repairs  | FilterPipe: queryString | paginate:{ itemsPerPage: 5, currentPage: p }; let ind=index\\\">\\n          <td>{{ind+1}}</td>\\n          <td>{{repair.billNo}}</td>\\n          <td>{{repair.dateReceived | date}}</td>   \\n          <td>{{repair.customerId.name}}</td> \\n          <td>{{repair.customerId.company}}</td>\\n          <td>{{repair.modelId.model_Name}}</td>\\n          <td>{{repair.stateId.stateName}}</td>\\n          <td>{{repair.employeeId.employeeName}}</td>\\n\\n          <td>{{repair.note}}</td>\\n          <td>{{repair.problem}}</td>\\n          \\n          <td>\\n            <button class=\\\"btn btn-success\\\" (click)=\\\"showRepairDetails(repair)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addRepairModal\\\">\\n              <i class=\\\"fa fa-eye\\\"></i>\\n            </button>\\n            <button class=\\\"btn btn-info\\\" (click)=\\\"showEditRepairForm(repair)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addRepairModal\\\">\\n              <i class=\\\"fa fa-edit\\\"></i>\\n            </button>\\n            <button class=\\\"btn btn-danger\\\" (click)=\\\"removeRepair(repair)\\\">\\n              <i class=\\\"fa fa-minus\\\"></i>\\n            </button>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n\\n    <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n\\n  </div>\\n</div>\\n\\n<div class=\\\"container\\\">\\n    <form *ngIf=\\\"repairForm\\\" #repairEntryForm=\\\"ngForm\\\" role=\\\"form\\\">\\n      <div class=\\\"modal fade\\\" id=\\\"addRepairModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"addRepairModal\\\" aria-hidden=\\\"true\\\"\\n        data-backdrop=\\\"static\\\" data-keyboard=\\\"false\\\">\\n        <div class=\\\"modal-dialog modal-lg\\\">\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"cancelAddEdit()\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n              <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\" *ngIf=\\\"!showDetails\\\">Add/Edit Repair</h4>\\n              <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\" *ngIf=\\\"showDetails\\\">Repair Details</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              <!-- START -->\\n    \\n                \\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-4\\\">\\n                          <div>\\n                              <div class=\\\"form-group\\\">\\n                                <label for=\\\"customers\\\">Select a Customer</label>\\n                                <a data-dismiss=\\\"modal\\\" (click)=\\\"createNewCustomerLinkClicked()\\\" \\n                                    class=\\\"createNewCustomerLink\\\">Create New</a>\\n                                <select class=\\\"form-control\\\" name=\\\"customers\\\" \\n                                        [(ngModel)]=\\\"newRepair.customerId\\\">\\n                                  <option *ngFor=\\\"let cust of customers\\\" \\n                                          value=\\\"{{cust._id}}\\\">{{cust.name}}({{cust.company}}-{{cust.address}})</option>\\n                                </select>\\n                              </div>\\n\\n                              <div class=\\\"form-group\\\" [class.has-success]=\\\"billNo.dirty && billNo.valid\\\" \\n                                    [class.has-error]=\\\"(billNo.touched) && !(billNo.valid)\\\">\\n                                  <label for=\\\"billNo\\\">Bill No *</label>\\n                                  <input type=\\\"text\\\" class=\\\"form-control\\\" \\n                                        id=\\\"billNo\\\" name=\\\"billNo\\\" id=\\\"billNo\\\" \\n                                        #billNo=\\\"ngModel\\\" \\n                                        [(ngModel)]=\\\"newRepair.billNo\\\"\\n                                    required>\\n                                  <div *ngIf=\\\"(billNo.dirty||billNo.touched) && !(billNo.valid)\\\" class=\\\"alert alert-danger\\\">\\n                                    Name is required!\\n                                  </div>\\n                              </div>\\n\\n                              <div class=\\\"form-group\\\">\\n                                <label for=\\\"states\\\">Repair Status</label>\\n                                <select class=\\\"form-control\\\" name=\\\"states\\\" [(ngModel)]=\\\"newRepair.stateId\\\">\\n                                  <option *ngFor=\\\"let state of states;let i=index\\\" \\n                                          value=\\\"{{state._id}}\\\"\\n                                          >{{state.stateName}}</option>\\n                                </select>\\n                              </div>\\n\\n                              <div class=\\\"form-group\\\">\\n                                <label for=\\\"problem\\\">Problem</label>\\n                                <textarea class=\\\"form-control\\\" id=\\\"problem\\\" \\n                                          name=\\\"problem\\\" \\n                                          [(ngModel)]=\\\"newRepair.problem\\\" rows=\\\"4\\\"></textarea>\\n                              </div>\\n                              \\n                              <div class=\\\"form-group\\\">\\n                                <label for=\\\"estimatedPrice\\\">Estimated Cost</label>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" \\n                                      id=\\\"estimatedPrice\\\" name=\\\"estimatedPrice\\\" \\n                                      [(ngModel)]=\\\"newRepair.estimatedPrice\\\">\\n                              </div>\\n\\n                              <div class=\\\"form-group\\\">\\n                                <label for=\\\"chargedPrice\\\">Customer Charged</label>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" \\n                                      id=\\\"chargedPrice\\\" name=\\\"chargedPrice\\\" \\n                                      [(ngModel)]=\\\"newRepair.chargedPrice\\\">\\n                              </div>\\n\\n                          </div>\\n                        </div>\\n                        <div class=\\\"col-sm-8\\\">\\n                          <div>\\n<!--                               <div class=\\\"form-group col-sm-6\\\">\\n                                <label for=\\\"dateReceived\\\">Date Received</label>\\n                                <input class=\\\"form-control\\\" \\n                                        type=\\\"date\\\" name=\\\"dateReceived\\\" \\n                                        id=\\\"dateReceived\\\" \\n                                        [(ngModel)]=\\\"newRepair.dateReceived\\\"\\n                                        >\\n                              </div>  -->\\n                              <div class=\\\"form-group col-sm-6\\\">\\n                                  <label for=\\\"dateReceived\\\">Date Received</label>\\n                                          <owl-date-time  [(ngModel)]=\\\"newRepair.dateReceived\\\"\\n                                          [dateFormat]=\\\"'YYYY-MM-DD'\\\"\\n                                          [type]=\\\"'calendar'\\\" [placeHolder]=\\\"'yyyy/mm/dd'\\\"\\n                                          name=\\\"dateReceived\\\" \\n                                          [inputId]=\\\"'dateReceived'\\\"></owl-date-time>\\n                                </div>\\n                                <div class=\\\"form-group col-sm-6\\\">\\n                                    <label for=\\\"dateReturned\\\">Date Returned</label>\\n                                            <owl-date-time  [(ngModel)]=\\\"newRepair.dateReturned\\\"\\n                                            [dateFormat]=\\\"'YYYY-MM-DD'\\\"\\n                                            [type]=\\\"'calendar'\\\" [placeHolder]=\\\"'yyyy/mm/dd'\\\"\\n                                            name=\\\"dateReturned\\\" \\n                                            [inputId]=\\\"'dateReturned'\\\"></owl-date-time>\\n                                  </div>\\n\\n                                  <div class=\\\"form-group col-sm-4 top-buffer\\\">\\n                                    <label for=\\\"equipments\\\">Equipment Type</label>\\n                                    <select class=\\\"form-control\\\" \\n                                            name=\\\"equipments\\\" \\n                                            [(ngModel)]=\\\"newRepair.equipmentId\\\"\\n                                            >\\n                                      <option *ngFor=\\\"let equipment of equipments\\\" value=\\\"{{equipment._id}}\\\">{{equipment.equipmentName}}</option>\\n                                    </select>\\n                                  </div>\\n                                  <div class=\\\"form-group col-sm-4 top-buffer\\\"\\n                                        >\\n                                    <label for=\\\"brands\\\">Brand *</label>\\n                                    <select class=\\\"form-control\\\" name=\\\"brands\\\" \\n                                            [(ngModel)]=\\\"newRepair.brandId\\\"\\n                                            (change)=\\\"onSelect($event.target.value)\\\"\\n                                            required>\\n                                            <!-- <option value=\\\"0\\\">--Select--</option> -->\\n                                      <option *ngFor=\\\"let brand of brands\\\" value=\\\"{{brand._id}}\\\">{{brand.brandName}}</option>\\n                                    </select>\\n                                  </div>\\n                                  <div class=\\\"form-group col-sm-4 top-buffer\\\">\\n                                    <label for=\\\"models\\\">Model *</label>\\n                                    \\n                                    <select class=\\\"form-control\\\" name=\\\"models\\\" \\n                                            [(ngModel)]=\\\"newRepair.modelId\\\"\\n                                            >\\n                                           \\n                                      <!-- <option *ngIf='newRepair.brandId == 0' value=\\\"0\\\">--Select--</option> -->\\n                                      <option *ngFor=\\\"let model of models\\\" value=\\\"{{model._id}}\\\">{{model.model_Name}}</option>\\n                                    </select>\\n                                  </div>\\n                                  <div class=\\\"form-group col-sm-12\\\">\\n                                    <label for=\\\"serialNo\\\">Serial No / IMEI</label>\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"serialNo\\\" name=\\\"serialNo\\\" [(ngModel)]=\\\"newRepair.serialNo\\\">\\n                                  </div>\\n                                  <div class=\\\"form-group col-sm-12\\\">\\n                                    <label for=\\\"accessories\\\">Accessories Delivered</label>\\n                                    <br>\\n                                    <div class=\\\"checkbox-inline\\\">\\n                                      <label class=\\\"\\\"><input type=\\\"checkbox\\\" value=\\\"\\\" name=\\\"cover\\\"\\n                                                            [(ngModel)]=\\\"newDetail.cover\\\"\\n                                                            >Cover</label>\\n                                    </div>\\n                                    <div class=\\\"checkbox-inline\\\">\\n                                      <label><input type=\\\"checkbox\\\" \\n                                                    value=\\\"\\\"\\n                                                    name=\\\"battery\\\"\\n                                                    [(ngModel)]=\\\"newDetail.battery\\\">\\n                                                    Battery</label>\\n                                    </div>\\n                                    <div class=\\\"checkbox-inline\\\">\\n                                      <label><input type=\\\"checkbox\\\" \\n                                                    value=\\\"\\\"\\n                                                    name=\\\"filter\\\"\\n                                                    [(ngModel)]=\\\"newDetail.filter\\\">Filter</label>\\n                                    </div>\\n                                    <div class=\\\"checkbox-inline\\\">\\n                                      <label><input type=\\\"checkbox\\\" value=\\\"\\\"\\n                                                    name=\\\"fcap\\\"\\n                                                    [(ngModel)]=\\\"newDetail.fcap\\\">F-Cap</label>\\n                                    </div>\\n                                    <div class=\\\"checkbox-inline\\\">\\n                                      <label><input type=\\\"checkbox\\\" \\n                                                    value=\\\"\\\"\\n                                                    name=\\\"rcap\\\"\\n                                                    [(ngModel)]=\\\"newDetail.rcap\\\">R-Cap</label>\\n                                    </div>\\n\\n                                  </div>\\n\\n                                  <div class=\\\"form-group col-sm-12\\\">\\n                                    \\n                                    <div class=\\\"checkbox-inline\\\">\\n                                      <label><input type=\\\"checkbox\\\" value=\\\"\\\"\\n                                                    name=\\\"bcap\\\"\\n                                                    [(ngModel)]=\\\"newDetail.bcap\\\">B-Cap</label>\\n                                    </div>\\n                                    <div class=\\\"checkbox-inline\\\">\\n                                      <label><input type=\\\"checkbox\\\" value=\\\"\\\"\\n                                                     name=\\\"strap\\\"\\n                                                      [(ngModel)]=\\\"newDetail.strap\\\">Strap</label>\\n                                    </div>\\n                                    <div class=\\\"checkbox-inline\\\">\\n                                      <label><input type=\\\"checkbox\\\" value=\\\"\\\"\\n                                                    name=\\\"card\\\"\\n                                                    [(ngModel)]=\\\"newDetail.card\\\">Card</label>\\n                                    </div>\\n                                    <div class=\\\"checkbox-inline\\\">\\n                                      <label><input type=\\\"checkbox\\\" value=\\\"\\\"\\n                                                     name=\\\"eyePiece\\\"\\n                                                    [(ngModel)]=\\\"newDetail.eyePiece\\\">Eye Piece</label>\\n                                    </div>\\n                                    <div class=\\\"checkbox-inline\\\">\\n                                      <label><input type=\\\"checkbox\\\" value=\\\"\\\"\\n                                                     name=\\\"hood\\\"\\n                                                    [(ngModel)]=\\\"newDetail.hood\\\">Hood</label>\\n                                    </div>\\n                                  </div>\\n                                \\n                                  <div class=\\\"form-group col-sm-6\\\">\\n                                    <label for=\\\"note\\\">Staff Note</label>\\n                                    <textarea class=\\\"form-control\\\" id=\\\"note\\\" \\n                                              name=\\\"note\\\" \\n                                              [(ngModel)]=\\\"newRepair.note\\\" rows=\\\"4\\\"></textarea>\\n                                  </div>\\n                                  <div class=\\\"form-group col-sm-6\\\">\\n                                    <label for=\\\"description\\\">Repair Description</label>\\n                                    <textarea class=\\\"form-control\\\" id=\\\"description\\\" \\n                                              name=\\\"description\\\" \\n                                              [(ngModel)]=\\\"newRepair.description\\\" rows=\\\"4\\\"></textarea>\\n                                  </div>\\n                                  <div class=\\\"form-group col-sm-6 top-buffer\\\">\\n                                    <label for=\\\"employees\\\">Assigned To</label>\\n                                    <select class=\\\"form-control\\\" name=\\\"employees\\\" [(ngModel)]=\\\"newRepair.employeeId\\\">\\n                                      <option *ngFor=\\\"let employee of employees\\\" value=\\\"{{employee._id}}\\\">{{employee.employeeName}}</option>\\n                                    </select>\\n                                  </div>\\n\\n                                 \\n                          </div>\\n                        </div>\\n                      </div>\\n                \\n    \\n              <!-- FIN -->\\n             \\n            </div> \\n            <div class=\\\"modal-footer\\\" *ngIf=\\\"!showDetails\\\">\\n                <p style=\\\"float:left;\\\">*Bill No, *Brand and *Model is Required!!</p>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"saveRepair(newRepair,newDetail)\\\" [disabled]=\\\"!repairEntryForm.form.valid\\\">Save changes</button>\\n    \\n    \\n              <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" (click)=\\\"cancelAddEdit()\\\">Close</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n\\n    </div>\\n\\n    \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/projects/entry/src/app/repairs/repairs.component.html\n// module id = ../../../../../src/app/repairs/repairs.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Repair } from './repairs';\nimport { Customer } from './../customers/customers';\nimport { RepairsService } from './repairs.service';\nimport { CustomersService } from './../customers/customers.service';\nimport { State } from './../states/states';\nimport { StatesService } from './../states/states.service';\nimport { Equipment } from './../equipments/equipments';\nimport { EquipmentsService } from './../equipments/equipments.service';\nimport { Brand } from './../brands/brands';\nimport { BrandsService } from './../brands/brands.service';\nimport { ModelsService } from './../models/models.service';\nimport { Model } from './../models/models';\nimport { Employee } from './../employees/employees';\nimport { EmployeesService } from './../employees/employees.service';\nimport { Detail } from './../details/details';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { DetailsService } from '../details/details.service';\nimport {FilterPipe} from './../pipes';\n\n@Component({\n  selector: 'app-repairs',\n  templateUrl: './repairs.component.html',\n  styleUrls: ['./repairs.component.css'],\n\n})\nexport class RepairsComponent implements OnInit {\n\n  repairs: Repair[];\n  details:Detail[];\n  repairForm:boolean=false;\n  isNewForm:boolean;\n  showDetails: boolean = false;\n  newRepair:any={};\n  newDetail:any={};\n  customers: Customer[];\n  states:State[];\n  equipments:Equipment[];\n  brands:Brand[];\n  models:Model[];\n  modelsx:Model[];\n  employees:Employee[];\n\n  sendRepair:Repair;\n  sendRepairP:Repair; //P for Post or Put\n\n  sendDetail:Detail;\n  sendDetailP:Detail;\n\n  addedData:any;\n\n  paramNew:any;\n  constructor(private repairsService:RepairsService,\n              private detailsService: DetailsService,\n              private customersService:CustomersService,\n              private statesService:StatesService,\n              private equipmentsService:EquipmentsService,\n              private brandsService:BrandsService,\n              private modelsService:ModelsService,\n              private employeesService:EmployeesService,\n              private toastr: ToastrService,\n              private router:Router\n            ) { \n              \n            }\n\n  ngOnInit() {\n    \n\n      this.fetchRepairs();\n\n      this.customersService.fetchCustomers().subscribe(\n      (data) => this.customers = data);\n      this.statesService.fetchStates().subscribe(\n        (data) => this.states = data);\n      this.equipmentsService.fetchEquipments().subscribe(\n          (data) => this.equipments = data);\n      this.brandsService.fetchBrands().subscribe(\n            (data) => this.brands = data);\n      this.modelsService.fetchModelsOnly().subscribe(\n        (data) => this.modelsx = data);\n      this.employeesService.fetchEmployees().subscribe(\n          (data) => this.employees = data); \n      \n          //this.modelsService.fetchModelsByBrandId()\n          \n  }\n\n  fetchRepairs(){\n    this.repairsService.fetchRepairs().subscribe(\n      (data) => {\n      this.repairs = data;\n      this.repairs.sort(this.sortByReceivedDate);\n                 } );\n    \n      this.detailsService.fetchDetails().subscribe(\n        (data) => {\n          this.details = data;\n        }\n      );\n  }\n\n  showRepairDetails(repair: Repair) {\n\n    this.loadRepairSyncData(repair);\n    this.detailsService.fetchDetailsById(repair.detailId)\n                        .subscribe((data) => {\n                          this.paramNew = data;\n                          //console.log(this.paramNew);\n                          this.loadDetailSyncData(this.paramNew,repair.detailId);\n                          this.newDetail = this.sendDetail;\n                        }); \n\n    if (!repair) {\n      this.repairForm = false;\n      return;\n    }\n    this.repairForm = true;\n    this.isNewForm = false;\n    this.newRepair = this.sendRepair;\n    this.showDetails = true;\n  }\n\n  showEditRepairForm(repair:Repair){\n\n    //console.log(repair);\n    this.loadRepairSyncData(repair);\n    this.detailsService.fetchDetailsById(repair.detailId)\n                        .subscribe((data) => {\n                          this.paramNew = data;\n                          //console.log(this.paramNew);\n                          this.loadDetailSyncData(this.paramNew,repair.detailId);\n                          this.newDetail = this.sendDetail;\n                        }); \n   \n    if(!repair){\n      this.repairForm = false;\n      return;\n    }\n    this.repairForm = true;\n    this.isNewForm=false;\n    this.newRepair = this.sendRepair;\n    this.showDetails = false;\n  }\n\n  showAddRepairForm(){ \n    //resets form if edited Repair\n    if(this.repairs.length){\n      this.newRepair = {};\n      this.newRepair.stateId = this.states[0]._id;\n      this.newRepair.equipmentId = this.equipments[0]._id;\n      this.newRepair.employeeId = this.employees[0]._id;\n      this.newRepair.customerId = this.customers[0]._id;\n      this.newDetail={};\n    }\n    this.repairForm = true;\n    this.isNewForm = true;\n    this.showDetails = false;\n\n  }\n\n  saveRepair(repair:Repair,detail:Detail){   \n\n    this.sendDetailP = {\n      _id: detail._id,\n      cover: detail.cover,\n      battery:detail.battery,\n      filter:detail.filter,\n      fcap:detail.fcap,\n      rcap:detail.rcap,\n      bcap:detail.bcap,\n      strap:detail.strap,\n      card:detail.card,\n      eyePiece:detail.eyePiece,\n      hood:detail.hood,\n           \n  }\n\n      if(this.isNewForm){\n            //add new detail and than repair\n        this.detailsService.addDetail(this.sendDetailP).subscribe(\n          (data) => {\n            this.addedData = data;\n            this.callRepair(repair,this.addedData._id);\n            \n          }\n        );\n\n        this.showAddSuccess();\n      }\n      else{\n        //update an existing Repair\n        this.callUpdateRepair(repair)\n        this.callDetailUpdate(detail,detail._id);\n        this.showEditSuccess();\n      }\n      this.repairForm = false;\n  }\n\n  removeRepair(repair){\n    if(confirm(\"Are you sure?\")){\n        this.repairsService.removeRepair(repair._id)\n                    .toPromise()\n                    .then(() => {\n                      this.detailsService.removeDetail(repair.detailId)\n                          .toPromise()\n                          .then(() => {\n                            this.fetchRepairs();\n                          });                      \n                    });\n        \n    this.showDeleteSuccess();\n      }\n  }\n\n  cancelAddEdit(){\n    this.repairForm = false;\n    this.fetchRepairs();\n  }\n\n  showAddSuccess() {\n    this.toastr.success('Repair Added Successfully!!');\n  }\n  showEditSuccess() {\n    this.toastr.success('Repair Edited Successfully!!');\n  }\n  showDeleteSuccess() {\n    this.toastr.success('Repair Deleted Successfully!!');\n  }\n  \n  createNewCustomerLinkClicked(){\n    this.router.navigate(['/customers']);\n  }\n\n  onSelect(brandId){\n    this.models = this.modelsx.filter((data) => data.brandId['_id'] == brandId);\n  }\n\n  loadRepairSyncData(repair:Repair){\n    console.log(repair);\n    this.sendRepair = {\n      _id:repair._id,\n      billNo:repair.billNo,\n      dateReceived:repair.dateReceived,\n      dateReturned:repair.dateReturned,\n      serialNo:repair.serialNo,\n      problem: repair.problem,\n      estimatedPrice:repair.estimatedPrice,\n      chargedPrice:repair.chargedPrice,\n      note:repair.note,\n      description:repair.description,\n      detailId: repair.detailId['_id'],\n      customerId:repair.customerId['_id'],\n      stateId:repair.stateId['_id'],\n      brandId:repair.brandId['_id'],\n      equipmentId:repair.equipmentId['_id'],\n      modelId:repair.modelId['_id'],\n      employeeId:repair.employeeId['_id']\n    };\n    this.onSelect(this.sendRepair.brandId);\n  }\n\n  loadDetailSyncData(detail:Detail,id){\n    console.log(detail);\n    this.sendDetail = {\n      _id: id,\n      cover: detail.cover,\n      battery:detail.battery,\n      filter:detail.filter,\n      fcap:detail.fcap,\n      rcap:detail.rcap,\n      bcap:detail.bcap,\n      strap:detail.strap,\n      card:detail.card,\n      eyePiece:detail.eyePiece,\n      hood:detail.hood,\n      \n    }\n  }\n\n  callRepair(repair,id){\n    this.sendRepairP = {\n      _id:repair._id,\n      billNo:repair.billNo,\n      dateReceived:repair.dateReceived,\n      dateReturned:repair.dateReturned,\n      serialNo:repair.serialNo,\n      problem: repair.problem,\n      estimatedPrice:repair.estimatedPrice,\n      chargedPrice:repair.chargedPrice,\n      note:repair.note,\n      description:repair.description,\n      detailId: id,\n      customerId:repair.customerId,\n      stateId:repair.stateId,\n      brandId:repair.brandId,\n      equipmentId:repair.equipmentId,\n      modelId:repair.modelId,\n      employeeId:repair.employeeId\n    };\n\n    this.repairsService.addRepair(this.sendRepairP).subscribe(\n      (data) => {\n        this.fetchRepairs();\n      })\n  }\n\n  callUpdateRepair(repair){\n    this.sendRepairP = {\n      _id:repair._id,\n      billNo:repair.billNo,\n      dateReceived:repair.dateReceived,\n      dateReturned:repair.dateReturned,\n      serialNo:repair.serialNo,\n      problem: repair.problem,\n      estimatedPrice:repair.estimatedPrice,\n      chargedPrice:repair.chargedPrice,\n      note:repair.note,\n      description:repair.description,\n      detailId: repair.detailId,\n      customerId:repair.customerId,\n      stateId:repair.stateId,\n      brandId:repair.brandId,\n      equipmentId:repair.equipmentId,\n      modelId:repair.modelId,\n      employeeId:repair.employeeId\n    };\n\n    this.repairsService.updateRepair(this.sendRepairP).subscribe(\n      (data) => {\n        console.log(data);\n      })\n  }\n\n  callDetailUpdate(detail,id){\n    console.log(detail);\n    this.sendDetailP = {\n      _id: id,\n      cover: detail.cover,\n      battery:detail.battery,\n      filter:detail.filter,\n      fcap:detail.fcap,\n      rcap:detail.rcap,\n      bcap:detail.bcap,\n      strap:detail.strap,\n      card:detail.card,\n      eyePiece:detail.eyePiece,\n      hood:detail.hood,\n      \n  }\n  console.log(this.sendDetailP);\n  this.detailsService.updateDetail(this.sendDetailP).subscribe(\n    (data) => {\n      console.log(data);\n      this.fetchRepairs();\n    }\n  )\n  }\n\nsortByReceivedDate(a:Repair,b:Repair){\n   if (a.billNo.valueOf() > b.billNo.valueOf()) {\n    return -1;\n  } else if (a.billNo.valueOf() < b.billNo.valueOf()) {\n    return 1;\n  } else {\n    return 0;\n  }\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/projects/entry/src/app/repairs/repairs.component.ts","import { Injectable } from '@angular/core';\nimport { Repair } from './repairs';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class RepairsService {\n\n  constructor(private http:Http) { }\n  \n\n  fetchRepairs() {\n\n    return this.http.get(\"http://localhost:3000/api/repairs\")                 \n                    .map( (response) => response.json() ); \n    }\n      \n  addRepair(repair:Repair){\n\n    return this.http.post(\"http://localhost:3000/api/repairs\",repair)\n                    .map((response) => response.json());\n  }\n\n  removeRepair(id:string){\n    \n      const url = `${\"http://localhost:3000/api/repairs\"}/${id}`;\n      return this.http.delete(url) ;\n    \n  }\n\n  updateRepair(repair:Repair){\n    \n    const url = `${\"http://localhost:3000/api/repairs\"}/${repair._id}`;\n    return this.http.put(url,repair);\n  }\n\n\n\n}\n\n\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// G:/projects/entry/src/app/repairs/repairs.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/projects/entry/src/app/states/states.component.css\n// module id = ../../../../../src/app/states/states.component.css\n// module chunks = main","module.exports = \"\\n<app-navigation></app-navigation>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-10\\\"><h2>States List</h2></div>\\n      <div class=\\\"col-md-2 addButton-right\\\">    \\n        <button class=\\\"btn btn-primary\\\"\\n        (click)=\\\"showAddStateForm()\\\"\\n        data-toggle=\\\"modal\\\" \\n        data-target=\\\"#addStateModal\\\">\\n    <i class=\\\"fa fa-plus\\\"></i>&nbsp;State\\n    </button></div>\\n    </div>\\n    \\n\\n    <table class=\\\"table table-bordered table-striped table-hover\\\">\\n      <thead>\\n        <tr>\\n          <th class=\\\"text-center\\\">S.N</th>\\n          <th class=\\\"text-center\\\">State Name</th>\\n          <th class=\\\"text-center\\\">State Description</th>\\n          \\n          <th class=\\\"text-center\\\">&nbsp;</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor = \\\"let state of states;let ind=index\\\">\\n          <td>{{ind+1}}</td>\\n          <td>{{state.stateName}}</td>\\n          <td>{{state.stateDescription}}</td>\\n          \\n          <td>\\n            <button class=\\\"btn btn-success\\\"\\n              (click)=\\\"showStateDetails(state)\\\"\\n              data-toggle=\\\"modal\\\" \\n            data-target=\\\"#addStateModal\\\">\\n              <i class=\\\"fa fa-eye\\\"></i>\\n            </button>\\n            <button class=\\\"btn btn-info\\\"\\n                    (click)=\\\"showEditStateForm(state)\\\"\\n                    data-toggle=\\\"modal\\\" \\n                  data-target=\\\"#addStateModal\\\">\\n              <i class=\\\"fa fa-edit\\\"></i>\\n            </button>\\n            <button class=\\\"btn btn-danger\\\"\\n                    (click)=\\\"removeState(state._id)\\\">\\n                <i class=\\\"fa fa-minus\\\"></i>\\n              </button>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n\\n    <form *ngIf=\\\"stateForm\\\" #stateEntryForm=\\\"ngForm\\\">\\n      <div class=\\\"modal fade\\\" \\n            id=\\\"addStateModal\\\" \\n            tabindex=\\\"-1\\\" role=\\\"dialog\\\" \\n            aria-labelledby=\\\"addStateModal\\\" \\n            aria-hidden=\\\"true\\\"\\n            data-backdrop=\\\"static\\\" \\n            data-keyboard=\\\"false\\\">\\n        <div class=\\\"modal-dialog\\\">\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <button type=\\\"button\\\" \\n                      class=\\\"close\\\" \\n                      (click)=\\\"cancelAddEdit()\\\"\\n                      data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n              <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\" *ngIf=\\\"!showDetails\\\">Add/Edit State</h4>\\n              <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\" *ngIf=\\\"showDetails\\\">State Details</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              \\n                \\n\\n                <div class=\\\"form-group\\\" \\n                [class.has-success]=\\\"stateName.dirty && stateName.valid\\\"\\n                [class.has-error]=\\\"(stateName.touched) && !(stateName.valid)\\\">\\n\\n\\n                <label for=\\\"stateName\\\">State Name *</label>\\n                  <input type=\\\"text\\\" \\n                          class=\\\"form-control\\\"\\n                          id=\\\"stateName\\\"\\n                          name=\\\"stateName\\\"\\n                          id=\\\"stateName\\\"\\n                          #stateName=\\\"ngModel\\\"\\n                          [(ngModel)]=\\\"newState.stateName\\\"\\n                          required   \\n                          >\\n                  <div *ngIf=\\\"(stateName.dirty||stateName.touched) && !(stateName.valid)\\\" class=\\\"alert alert-danger\\\">\\n                      Name is required!\\n                  </div>\\n\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"stateDesc\\\">Description</label>\\n                    <textarea\\n                          class=\\\"form-control\\\"\\n                          id=\\\"stateDesc\\\"\\n                          name=\\\"stateDesc\\\"\\n                          [(ngModel)]=\\\"newState.stateDescription\\\"\\n                          rows=\\\"3\\\"\\n                          ></textarea>\\n                 </div>\\n   \\n            </div>\\n            <div class=\\\"modal-footer\\\" *ngIf=\\\"!showDetails\\\" >\\n\\n                <button type=\\\"button\\\" \\n                class=\\\"btn btn-primary\\\"\\n                data-dismiss=\\\"modal\\\" \\n                (click)=\\\"saveState(newState)\\\"\\n                [disabled]=\\\"!stateEntryForm.form.valid\\\"\\n                >Save changes</button>\\n                \\n\\n              <button type=\\\"button\\\" \\n                      class=\\\"btn btn-default\\\" \\n                      data-dismiss=\\\"modal\\\"\\n                      (click)=\\\"cancelAddEdit()\\\"\\n                      >Close</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/projects/entry/src/app/states/states.component.html\n// module id = ../../../../../src/app/states/states.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { State } from './states';\nimport { StatesService } from './states.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-states',\n  templateUrl: './states.component.html',\n  styleUrls: ['./states.component.css']\n})\nexport class StatesComponent implements OnInit {\n  states: State[];\n  stateForm:boolean=false;\n  isNewForm:boolean;\n  showDetails:boolean=false;\n  newState:any={};\n\n  constructor(private statesService:StatesService,\n                private toastr: ToastrService) { }\n\n  ngOnInit() {\n      this.fetchStates();\n  }\n\n  fetchStates(){\n    this.statesService.fetchStates().subscribe(\n      (data) => this.states = data );\n  }\n\n  showStateDetails(State:State){\n    if(!State){\n      this.stateForm = false;\n      return;\n    }\n    this.stateForm = true;\n    this.isNewForm=false;\n    this.newState = State;\n    this.showDetails = true;\n  }\n\n  showEditStateForm(State:State){\n    if(!State){\n      this.stateForm = false;\n      return;\n    }\n    this.stateForm = true;\n    this.isNewForm=false;\n    this.newState = State;\n    this.showDetails = false;\n  }\n\n  showAddStateForm(){\n    //resets form if edited State\n    console.log(this.states.length);\n    if(this.states.length){\n      this.newState = {};\n    }\n    this.stateForm = true;\n    this.isNewForm = true;\n    this.showDetails = false;\n  }\n\n  saveState(State:State){\n      if(this.isNewForm){\n        //add a new State\n        this.statesService.addState(State).subscribe(\n          (data) => {\n            console.log(data);\n            this.fetchStates();\n          }\n        );\n        this.showAddSuccess();\n      }\n      else{\n        //update an existing State\n/*         this.statesService.updateState(State).toPromise()\n        .then( () => {\n          this.fetchStates();\n        }\n        ); */\n        this.statesService.updateState(State).toPromise()\n        .then( () => {\n          this.fetchStates();\n        }\n        );\n        this.showEditSuccess();\n      }\n      this.stateForm = false;\n\n  }\n\n  removeState(id){\n    if(confirm(\"Are you sure?\")){\n    this.statesService.removeState(id).toPromise()\n    .then( () => {\n         this.fetchStates();\n       }\n       );\n       this.showDeleteSuccess();\n      }\n  }\n\n  cancelAddEdit(){\n    this.stateForm = false;\n    this.fetchStates();\n  }\n\n  showAddSuccess() {\n    this.toastr.success('State Added Successfully!!');\n  }\n  showEditSuccess() {\n    this.toastr.success('State Edited Successfully!!');\n  }\n  showDeleteSuccess() {\n    this.toastr.success('State Deleted Successfully!!');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/projects/entry/src/app/states/states.component.ts","import { Injectable } from '@angular/core';\nimport { State } from './states';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class StatesService {\n\n  constructor(private http:Http) { }\n  \n  fetchStates(){\n         return this.http.get('http://localhost:3000/api/states')\n          .map(\n            (response) => response.json() )\n            ; \n      }\n\n  addState(state:State){\n\n    return this.http.post(\"http://localhost:3000/api/states\",state);\n  }\n\n  removeState(id:string){\n    \n      const url = `${\"http://localhost:3000/api/states\"}/${id}`;\n      return this.http.delete(url);\n    \n  }\n\n  updateState(state:State){\n    const url = `${\"http://localhost:3000/api/states\"}/${state._id}`;\n    return this.http.put(url, state).map(success => success.status)\n      ;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/projects/entry/src/app/states/states.service.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/projects/entry/src/app/todo/todo/todo.component.css\n// module id = ../../../../../src/app/todo/todo/todo.component.css\n// module chunks = main","module.exports = \"<p>\\n  todo works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/projects/entry/src/app/todo/todo/todo.component.html\n// module id = ../../../../../src/app/todo/todo/todo.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\nexport class TodoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/projects/entry/src/app/todo/todo/todo.component.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class UserService {\n\n  private isUserLoggedIn;\n  public username;\n\n  constructor() { \n  \tthis.isUserLoggedIn = false;\n  }\n\n  setUserLoggedIn() {\n  \tthis.isUserLoggedIn = true;\n    this.username = 'admin';\n  }\n\n  getUserLoggedIn() {\n  \treturn this.isUserLoggedIn;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/projects/entry/src/app/user.service.ts","export const environment = {\n  production: true\n};\n\n\n\n// WEBPACK FOOTER //\n// G:/projects/entry/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// G:/projects/entry/src/main.ts"],"sourceRoot":"webpack:///"}